{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.1a78e11a153793486d30.hot-update.js","sources":["webpack:///./pages/_app.jsx","webpack:///./redux/sagas/login.js","webpack:///./redux/sagas/rootSaga.js"],"sourcesContent":["/* eslint-disable no-shadow */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { Fragment, useEffect } from 'react';\r\n// import App from 'next/app';\r\nimport axios from 'axios';\r\nimport { Provider, useDispatch, useSelector } from 'react-redux';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport Head from 'next/head';\r\nimport { ServerStyleSheets, ThemeProvider } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\nimport Layout from '../components/Layout';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport store from '../redux/store';\r\nimport { DO_SESSION } from '../redux/reducers/sagaLoginReducer';\r\n\r\nmoment.locale('ko');\r\n\r\nconst RootApp = (props) => {\r\n  const { Component, pageProps, store } = props;\r\n\r\n  useEffect(() => {\r\n    const jssStyles = document.querySelector('#jss-server-side');\r\n    if (jssStyles) {\r\n      jssStyles.parentNode.removeChild(jssStyles);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>Devsol Blog</title>\r\n      </Head>\r\n      <Provider store={store}>\r\n        <Layout>\r\n          <Component {...pageProps} />\r\n        </Layout>\r\n      </Provider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRootApp.getInitialProps = async (context) => {\r\n  // console.log(context.Component.getInitialProps);\r\n  // console.log(context.ctx);\r\n  const { Component, ctx } = context;\r\n  // console.log(ctx.store.getState());\r\n\r\n  const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n  return { pageProps };\r\n};\r\n\r\nexport default withRedux(() => (store))(RootApp);\r\n// export default RootApp;\r\n","import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  SET_USERNAME_STARTED, SET_PASSWORD_STARTED,\r\n  SET_USERNAME, SET_PASSWORD, DO_LOGIN, DO_LOGIN_STARTED,\r\n  DO_LOGIN_SUCCESS, DO_LOGIN_FAIL,\r\n} from '../reducers/sagaLoginReducer';\r\n// import { SAGA_SIGN_IN } from '../reducers/sagaLoginReducer';\r\n\r\nconst setUsername = function* setUsername(action) {\r\n  yield put({ type: SET_USERNAME_STARTED, payload: action.payload });\r\n};\r\nconst setPassword = function* setPassword(action) {\r\n  yield put({ type: SET_PASSWORD_STARTED, payload: action.payload });\r\n};\r\nconst doLogin = function* doLogin(action) {\r\n  // yield console.log(action);\r\n  try {\r\n    yield put({ type: DO_LOGIN_STARTED });\r\n    const json = {\r\n      uid: action.payload.username,\r\n      upw: action.payload.password,\r\n    };\r\n    // console.log(json);\r\n    const { data } = yield call([axios, 'post'], 'http://127.0.0.1:3001/auth/signin', json, {\r\n      withCredentials: true, // 쿠키를 주고받을 수 있게됨\r\n    });\r\n    yield put({ type: DO_LOGIN_SUCCESS });\r\n  } catch (e) {\r\n    yield put({ type: DO_LOGIN_FAIL });\r\n  }\r\n};\r\n\r\n// watch\r\nexport const watchSetUsername = function* watchSetUsername() {\r\n  yield takeEvery(SET_USERNAME, setUsername);\r\n};\r\nexport const watchSetUserpassword = function* watchSetUserpassword() {\r\n  yield takeEvery(SET_PASSWORD, setPassword);\r\n};\r\n\r\nexport const watchLogin = function* watchLogin() {\r\n  yield takeEvery(DO_LOGIN, doLogin);\r\n};\r\n","import { all } from 'redux-saga/effects';\r\nimport {\r\n  watchSetUsername, watchSetUserpassword,\r\n  watchLogin, watchSession,\r\n} from './login';\r\n\r\n// all 함수를 통해 Saga들을 하나로 묶어줄수 있다.\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchSetUsername(),\r\n    watchSetUserpassword(),\r\n    watchLogin(),\r\n  ]);\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAKA;AAAA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAMA;AANA;AAQA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAJA;AAIA;AACA;AACA;AAFA;AACA;AALA;AASA;AACA;AACA;AAFA;AACA;AAVA;AAAA;AASA;AATA;AAYA;AAAA;AAAA;AACA;AAbA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AARA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}