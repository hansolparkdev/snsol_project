{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.5a0f3b6d6d5014817b61.hot-update.js","sources":["webpack:///./redux/reducers/sagaLoginReducer.js"],"sourcesContent":["export const SET_USERNAME_STARTED = 'SET_USERNAME_STARTED';\r\nexport const SET_PASSWORD_STARTED = 'SET_PASSWORD_STARTED';\r\nexport const DO_LOGIN_STARTED = 'DO_LOGIN_STARTED';\r\nexport const DO_LOGIN_SUCCESS = 'DO_LOGIN_SUCCESS';\r\nexport const DO_LOGIN_FAIL = 'DO_LOGIN_FAIL';\r\n\r\n// SAGA Action\r\nexport const SET_USERNAME = 'SET_USERNAME';\r\nexport const SET_PASSWORD = 'SET_PASSWORD';\r\nexport const DO_LOGIN = 'DO_LOGIN';\r\n\r\nexport const initialState = {\r\n  username: '',\r\n  password: '',\r\n  loginStatus: undefined,\r\n  loginErrorMsg: '',\r\n};\r\n\r\nconst sagaLoginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USERNAME_STARTED: {\r\n      return { ...state, username: action.payload };\r\n    }\r\n    case SET_PASSWORD_STARTED: {\r\n      return { ...state, password: action.payload };\r\n    }\r\n    case DO_LOGIN_STARTED: {\r\n      return { ...state, loginStatus: 'ongoing' };\r\n    }\r\n    case DO_LOGIN_SUCCESS: {\r\n      return { ...state, loginStatus: 'success', user: action.payload };\r\n    }\r\n    case DO_LOGIN_FAIL: {\r\n      return { ...state, loginStatus: 'failed' };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default sagaLoginReducer;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAlBA;AAoBA;AACA;AACA;;;;A","sourceRoot":""}