{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux'; // Action Types\n\nexport var INCREMENT_COUNTER = 'INCREMENT_COUNTER';\nexport var DECREMENT_COUNTER = 'DECREMENT_COUNTER';\nexport var SAGA_UP = 'SAGA_UP';\nexport var SAGA_DOWN = 'SAGA_DOWN';\nexport var SAGA_UP_ASYNC = 'SAGA_UP_ASYNC';\nexport var SAGA_DOWN_ASYNC = 'SAGA_DOWN_ASYNC'; // Action Creator\n\nexport var increment = function increment() {\n  return {\n    type: INCREMENT_COUNTER\n  };\n};\nexport var decrement = function decrement() {\n  return {\n    type: DECREMENT_COUNTER\n  };\n};\nexport var sagaIncrement = function sagaIncrement() {\n  return {\n    type: SAGA_UP,\n    value: 1\n  };\n};\nexport var sagaDecrement = function sagaDecrement() {\n  return {\n    type: SAGA_DOWN,\n    value: 1\n  };\n};\nexport var initialState = {\n  value: 1,\n  age: 20\n};\n\nvar sagaCounterReducer = function sagaCounterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var newState = _objectSpread({}, state);\n\n  switch (action.type) {\n    case SAGA_UP_ASYNC:\n      newState.age += action.value;\n      break;\n\n    case SAGA_DOWN_ASYNC:\n      newState.age -= action.value;\n      break;\n\n    default:\n      return newState;\n  }\n\n  return newState;\n};\n\nvar counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return _objectSpread({}, state, {\n        value: state.value + 1\n      });\n\n    case DECREMENT_COUNTER:\n      return _objectSpread({}, state, {\n        value: state.value - 1\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nvar rootReducer = combineReducers({\n  counter: counterReducer,\n  sagaCounter: sagaCounterReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/reducers/rootReducer.js"],"names":["combineReducers","INCREMENT_COUNTER","DECREMENT_COUNTER","SAGA_UP","SAGA_DOWN","SAGA_UP_ASYNC","SAGA_DOWN_ASYNC","increment","type","decrement","sagaIncrement","value","sagaDecrement","initialState","age","sagaCounterReducer","state","action","newState","counterReducer","rootReducer","counter","sagaCounter"],"mappings":";;;;;;;;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;;AACA,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,IAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB,C,CAEP;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AAC9BC,IAAAA,IAAI,EAAEP;AADwB,GAAP;AAAA,CAAlB;AAIP,OAAO,IAAMQ,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AAC9BD,IAAAA,IAAI,EAAEN;AADwB,GAAP;AAAA,CAAlB;AAIP,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAO;AAClCF,IAAAA,IAAI,EAAEL,OAD4B;AAElCQ,IAAAA,KAAK,EAAE;AAF2B,GAAP;AAAA,CAAtB;AAKP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAO;AAClCJ,IAAAA,IAAI,EAAEJ,SAD4B;AAElCO,IAAAA,KAAK,EAAE;AAF2B,GAAP;AAAA,CAAtB;AAKP,OAAO,IAAME,YAAY,GAAG;AAC1BF,EAAAA,KAAK,EAAE,CADmB;AAE1BG,EAAAA,GAAG,EAAE;AAFqB,CAArB;;AAKP,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC3D,MAAMC,QAAQ,qBAAQF,KAAR,CAAd;;AACA,UAAQC,MAAM,CAACT,IAAf;AACE,SAAKH,aAAL;AACEa,MAAAA,QAAQ,CAACJ,GAAT,IAAgBG,MAAM,CAACN,KAAvB;AACA;;AACF,SAAKL,eAAL;AACEY,MAAAA,QAAQ,CAACJ,GAAT,IAAgBG,MAAM,CAACN,KAAvB;AACA;;AACF;AACE,aAAOO,QAAP;AARJ;;AAUA,SAAOA,QAAP;AACD,CAbD;;AAeA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCH,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACvD,UAAQA,MAAM,CAACT,IAAf;AACE,SAAKP,iBAAL;AACE,+BAAYe,KAAZ;AAAmBL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,GAAc;AAAxC;;AACF,SAAKT,iBAAL;AACE,+BAAYc,KAAZ;AAAmBL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,GAAc;AAAxC;;AACF;AACE,+BAAYK,KAAZ;AANJ;AAQD,CATD;;AAWA,IAAMI,WAAW,GAAGpB,eAAe,CAAC;AAClCqB,EAAAA,OAAO,EAAEF,cADyB;AAElCG,EAAAA,WAAW,EAAEP;AAFqB,CAAD,CAAnC;AAKA,eAAeK,WAAf","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\n// Action Types\r\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\r\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\r\nexport const SAGA_UP = 'SAGA_UP';\r\nexport const SAGA_DOWN = 'SAGA_DOWN';\r\nexport const SAGA_UP_ASYNC = 'SAGA_UP_ASYNC';\r\nexport const SAGA_DOWN_ASYNC = 'SAGA_DOWN_ASYNC';\r\n\r\n// Action Creator\r\nexport const increment = () => ({\r\n  type: INCREMENT_COUNTER,\r\n});\r\n\r\nexport const decrement = () => ({\r\n  type: DECREMENT_COUNTER,\r\n});\r\n\r\nexport const sagaIncrement = () => ({\r\n  type: SAGA_UP,\r\n  value: 1,\r\n});\r\n\r\nexport const sagaDecrement = () => ({\r\n  type: SAGA_DOWN,\r\n  value: 1,\r\n});\r\n\r\nexport const initialState = {\r\n  value: 1,\r\n  age: 20,\r\n};\r\n\r\nconst sagaCounterReducer = (state = initialState, action) => {\r\n  const newState = { ...state };\r\n  switch (action.type) {\r\n    case SAGA_UP_ASYNC:\r\n      newState.age += action.value;\r\n      break;\r\n    case SAGA_DOWN_ASYNC:\r\n      newState.age -= action.value;\r\n      break;\r\n    default:\r\n      return newState;\r\n  }\r\n  return newState;\r\n};\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT_COUNTER:\r\n      return { ...state, value: state.value + 1 };\r\n    case DECREMENT_COUNTER:\r\n      return { ...state, value: state.value - 1 };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  counter: counterReducer,\r\n  sagaCounter: sagaCounterReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}