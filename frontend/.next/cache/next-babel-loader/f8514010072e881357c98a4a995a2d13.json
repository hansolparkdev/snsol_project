{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(ageUpAsync),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchAgeUp);\n\nimport { takeEvery, put, delay } from 'redux-saga/effects';\n\nfunction ageUpAsync() {\n  return _regeneratorRuntime.wrap(function ageUpAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('a');\n          _context.next = 3;\n          return delay(4000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: 'AGE_UP_ASYNC',\n            value: 1\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default function watchAgeUp() {\n  return _regeneratorRuntime.wrap(function watchAgeUp$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('watch');\n          _context2.next = 3;\n          return takeEvery('AGE_UP', ageUpAsync);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/sagas/index.js"],"names":["ageUpAsync","watchAgeUp","takeEvery","put","delay","console","log","type","value"],"mappings":";;oDAEUA,U;qDAMeC,U;;AARzB,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,KAAzB,QAAsC,oBAAtC;;AAEA,SAAUJ,UAAV;AAAA;AAAA;AAAA;AAAA;AACEK,UAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AADF;AAEE,iBAAMF,KAAK,CAAC,IAAD,CAAX;;AAFF;AAAA;AAGE,iBAAMD,GAAG,CAAC;AAAEI,YAAAA,IAAI,EAAE,cAAR;AAAwBC,YAAAA,KAAK,EAAE;AAA/B,WAAD,CAAT;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAe,SAAUP,UAAV;AAAA;AAAA;AAAA;AAAA;AACbI,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AADa;AAEb,iBAAMJ,SAAS,CAAC,QAAD,EAAWF,UAAX,CAAf;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, put, delay } from 'redux-saga/effects';\r\n\r\nfunction* ageUpAsync() {\r\n  console.log('a');\r\n  yield delay(4000);\r\n  yield put({ type: 'AGE_UP_ASYNC', value: 1 });\r\n}\r\n\r\nexport default function* watchAgeUp() {\r\n  console.log('watch');\r\n  yield takeEvery('AGE_UP', ageUpAsync);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}