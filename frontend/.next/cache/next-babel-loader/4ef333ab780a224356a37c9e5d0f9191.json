{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { takeEvery, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SET_USERNAME_STARTED, SET_PASSWORD_STARTED, SET_USERNAME, SET_PASSWORD, DO_LOGIN, DO_LOGIN_STARTED, DO_LOGIN_SUCCESS, DO_LOGIN_FAIL } from '../reducers/sagaLoginReducer'; // import { SAGA_SIGN_IN } from '../reducers/sagaLoginReducer';\n\nvar setUsername = /*#__PURE__*/_regeneratorRuntime.mark(function setUsername(action) {\n  return _regeneratorRuntime.wrap(function setUsername$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return put({\n            type: SET_USERNAME_STARTED,\n            payload: action.payload\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, setUsername);\n});\n\nvar setPassword = /*#__PURE__*/_regeneratorRuntime.mark(function setPassword(action) {\n  return _regeneratorRuntime.wrap(function setPassword$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return put({\n            type: SET_PASSWORD_STARTED,\n            payload: action.payload\n          });\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, setPassword);\n});\n\nvar doLogin = /*#__PURE__*/_regeneratorRuntime.mark(function doLogin(action) {\n  return _regeneratorRuntime.wrap(function doLogin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return console.log(action);\n\n        case 2:\n          _context3.next = 4;\n          return put({\n            type: DO_LOGIN_STARTED\n          });\n\n        case 4:\n          _context3.next = 6;\n          return axios.post('http://127.0.0.1:3001/auth/signin', {\n            uid: action.payload.username,\n            upw: action.payload.password\n          }).then(function (response) {\n            console.log(response); // dispatch(thunkLoginSuccess(response));\n          })[\"catch\"](function (err) {\n            alert(err.response.data); // dispatch(thunkLoginError(err.response.data));\n            // idInput.current.value = '';\n            // pwInput.current.value = '';\n            // idInput.current.focus();\n          });\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, doLogin);\n}); // const attemptLogin = () => {\n//   return Axios.get('http://127.0.0.1:3001/auth/siginin').then((response) => response.data);\n// };\n// watch\n\n\nexport var watchSetUsername = /*#__PURE__*/_regeneratorRuntime.mark(function watchSetUsername() {\n  return _regeneratorRuntime.wrap(function watchSetUsername$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SET_USERNAME, setUsername);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, watchSetUsername);\n});\nexport var watchSetUserpassword = /*#__PURE__*/_regeneratorRuntime.mark(function watchSetUserpassword() {\n  return _regeneratorRuntime.wrap(function watchSetUserpassword$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(SET_PASSWORD, setPassword);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, watchSetUserpassword);\n});\nexport var watchLogin = /*#__PURE__*/_regeneratorRuntime.mark(function watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(DO_LOGIN, doLogin);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, watchLogin);\n});","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/sagas/login.js"],"names":["takeEvery","put","delay","axios","SET_USERNAME_STARTED","SET_PASSWORD_STARTED","SET_USERNAME","SET_PASSWORD","DO_LOGIN","DO_LOGIN_STARTED","DO_LOGIN_SUCCESS","DO_LOGIN_FAIL","setUsername","action","type","payload","setPassword","doLogin","console","log","post","uid","username","upw","password","then","response","err","alert","data","watchSetUsername","watchSetUserpassword","watchLogin"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,KAAzB,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,EACwBC,oBADxB,EAEEC,YAFF,EAEgBC,YAFhB,EAE8BC,QAF9B,EAEwCC,gBAFxC,EAGEC,gBAHF,EAGoBC,aAHpB,QAIO,8BAJP,C,CAKA;;AAEA,IAAMC,WAAW,yCAAG,SAAUA,WAAV,CAAsBC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB,iBAAMZ,GAAG,CAAC;AAAEa,YAAAA,IAAI,EAAEV,oBAAR;AAA8BW,YAAAA,OAAO,EAAEF,MAAM,CAACE;AAA9C,WAAD,CAAT;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUH,WAAV;AAAA,CAAH,CAAjB;;AAGA,IAAMI,WAAW,yCAAG,SAAUA,WAAV,CAAsBH,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB,iBAAMZ,GAAG,CAAC;AAAEa,YAAAA,IAAI,EAAET,oBAAR;AAA8BU,YAAAA,OAAO,EAAEF,MAAM,CAACE;AAA9C,WAAD,CAAT;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUC,WAAV;AAAA,CAAH,CAAjB;;AAGA,IAAMC,OAAO,yCAAG,SAAUA,OAAV,CAAkBJ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,iBAAMK,OAAO,CAACC,GAAR,CAAYN,MAAZ,CAAN;;AADc;AAAA;AAEd,iBAAMZ,GAAG,CAAC;AAAEa,YAAAA,IAAI,EAAEL;AAAR,WAAD,CAAT;;AAFc;AAAA;AAGd,iBAAMN,KAAK,CAACiB,IAAN,CACJ,mCADI,EAEJ;AACEC,YAAAA,GAAG,EAAER,MAAM,CAACE,OAAP,CAAeO,QADtB;AAEEC,YAAAA,GAAG,EAAEV,MAAM,CAACE,OAAP,CAAeS;AAFtB,WAFI,EAMJC,IANI,CAMC,UAACC,QAAD,EAAc;AACnBR,YAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ,EADmB,CAEnB;AACD,WATK,WASG,UAACC,GAAD,EAAS;AAChBC,YAAAA,KAAK,CAACD,GAAG,CAACD,QAAJ,CAAaG,IAAd,CAAL,CADgB,CAEhB;AACA;AACA;AACA;AACD,WAfK,CAAN;;AAHc;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUZ,OAAV;AAAA,CAAH,CAAb,C,CAoBA;AACA;AACA;AAEA;;;AACA,OAAO,IAAMa,gBAAgB,yCAAG,SAAUA,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9B,iBAAM9B,SAAS,CAACM,YAAD,EAAeM,WAAf,CAAf;;AAD8B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUkB,gBAAV;AAAA,CAAH,CAAtB;AAGP,OAAO,IAAMC,oBAAoB,yCAAG,SAAUA,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAClC,iBAAM/B,SAAS,CAACO,YAAD,EAAeS,WAAf,CAAf;;AADkC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUe,oBAAV;AAAA,CAAH,CAA1B;AAIP,OAAO,IAAMC,UAAU,yCAAG,SAAUA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACxB,iBAAMhC,SAAS,CAACQ,QAAD,EAAWS,OAAX,CAAf;;AADwB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUe,UAAV;AAAA,CAAH,CAAhB","sourcesContent":["import { takeEvery, put, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  SET_USERNAME_STARTED, SET_PASSWORD_STARTED,\r\n  SET_USERNAME, SET_PASSWORD, DO_LOGIN, DO_LOGIN_STARTED,\r\n  DO_LOGIN_SUCCESS, DO_LOGIN_FAIL,\r\n} from '../reducers/sagaLoginReducer';\r\n// import { SAGA_SIGN_IN } from '../reducers/sagaLoginReducer';\r\n\r\nconst setUsername = function* setUsername(action) {\r\n  yield put({ type: SET_USERNAME_STARTED, payload: action.payload });\r\n};\r\nconst setPassword = function* setPassword(action) {\r\n  yield put({ type: SET_PASSWORD_STARTED, payload: action.payload });\r\n};\r\nconst doLogin = function* doLogin(action) {\r\n  yield console.log(action);\r\n  yield put({ type: DO_LOGIN_STARTED });\r\n  yield axios.post(\r\n    'http://127.0.0.1:3001/auth/signin',\r\n    {\r\n      uid: action.payload.username,\r\n      upw: action.payload.password,\r\n    },\r\n  ).then((response) => {\r\n    console.log(response);\r\n    // dispatch(thunkLoginSuccess(response));\r\n  }).catch((err) => {\r\n    alert(err.response.data);\r\n    // dispatch(thunkLoginError(err.response.data));\r\n    // idInput.current.value = '';\r\n    // pwInput.current.value = '';\r\n    // idInput.current.focus();\r\n  });\r\n};\r\n// const attemptLogin = () => {\r\n//   return Axios.get('http://127.0.0.1:3001/auth/siginin').then((response) => response.data);\r\n// };\r\n\r\n// watch\r\nexport const watchSetUsername = function* watchSetUsername() {\r\n  yield takeEvery(SET_USERNAME, setUsername);\r\n};\r\nexport const watchSetUserpassword = function* watchSetUserpassword() {\r\n  yield takeEvery(SET_PASSWORD, setPassword);\r\n};\r\n\r\nexport const watchLogin = function* watchLogin() {\r\n  yield takeEvery(DO_LOGIN, doLogin);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}