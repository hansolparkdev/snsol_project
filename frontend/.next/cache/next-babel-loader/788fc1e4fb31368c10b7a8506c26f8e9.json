{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nexport const THUNK_LOGIN_SUCCESS = 'THUNK_LOGIN_SUCCESS';\nexport const THUNK_LOGIN_ERROR = 'THUNK_LOGIN_ERROR';\nexport const thunkLoginSuccess = data => ({\n  type: THUNK_LOGIN_SUCCESS,\n  data\n});\nexport const thunkLoginError = data => ({\n  type: THUNK_LOGIN_ERROR,\n  data\n});\nexport const thunkIncrementAsync = (id, pw) => dispatch => {\n  axios.post('http://127.0.0.1:3001/auth/signin', {\n    uid: id,\n    upw: pw\n  }).then(response => {\n    console.log(response);\n    dispatch(thunkLoginSuccess(response));\n  }).catch(err => {\n    alert(err.response.data);\n    dispatch(thunkLoginError(err.response.data)); // idInput.current.value = '';\n    // pwInput.current.value = '';\n    // idInput.current.focus();\n  });\n};\nexport const initialState = {\n  loginState: false,\n  loginErrorMsg: ''\n};\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case THUNK_LOGIN_SUCCESS:\n      return _objectSpread({}, state, {\n        loginState: true\n      });\n\n    case THUNK_LOGIN_ERROR:\n      return _objectSpread({}, state, {\n        loginErrorMsg: action.data\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default loginReducer;","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/reducers/loginReducer.js"],"names":["axios","THUNK_LOGIN_SUCCESS","THUNK_LOGIN_ERROR","thunkLoginSuccess","data","type","thunkLoginError","thunkIncrementAsync","id","pw","dispatch","post","uid","upw","then","response","console","log","catch","err","alert","initialState","loginState","loginErrorMsg","loginReducer","state","action"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAGP,OAAO,MAAMC,iBAAiB,GAAIC,IAAD,KAAW;AAC1CC,EAAAA,IAAI,EAAEJ,mBADoC;AAE1CG,EAAAA;AAF0C,CAAX,CAA1B;AAKP,OAAO,MAAME,eAAe,GAAIF,IAAD,KAAW;AACxCC,EAAAA,IAAI,EAAEH,iBADkC;AAExCE,EAAAA;AAFwC,CAAX,CAAxB;AAKP,OAAO,MAAMG,mBAAmB,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAaC,QAAD,IAAc;AAC3DV,EAAAA,KAAK,CAACW,IAAN,CACE,mCADF,EAEE;AACEC,IAAAA,GAAG,EAAEJ,EADP;AAEEK,IAAAA,GAAG,EAAEJ;AAFP,GAFF,EAMEK,IANF,CAMQC,QAAD,IAAc;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAL,IAAAA,QAAQ,CAACP,iBAAiB,CAACY,QAAD,CAAlB,CAAR;AACD,GATD,EASGG,KATH,CASUC,GAAD,IAAS;AAChBC,IAAAA,KAAK,CAACD,GAAG,CAACJ,QAAJ,CAAaX,IAAd,CAAL;AACAM,IAAAA,QAAQ,CAACJ,eAAe,CAACa,GAAG,CAACJ,QAAJ,CAAaX,IAAd,CAAhB,CAAR,CAFgB,CAGhB;AACA;AACA;AACD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMiB,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AAE1BC,EAAAA,aAAa,EAAE;AAFW,CAArB;;AAKP,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACrB,IAAf;AACE,SAAKJ,mBAAL;AACE,+BAAYwB,KAAZ;AAAmBH,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKpB,iBAAL;AACE,+BAAYuB,KAAZ;AAAmBF,QAAAA,aAAa,EAAEG,MAAM,CAACtB;AAAzC;;AACF;AACE,+BAAYqB,KAAZ;AANJ;AAQD,CATD;;AAWA,eAAeD,YAAf","sourcesContent":["import axios from 'axios';\r\n\r\nexport const THUNK_LOGIN_SUCCESS = 'THUNK_LOGIN_SUCCESS';\r\nexport const THUNK_LOGIN_ERROR = 'THUNK_LOGIN_ERROR';\r\n\r\n\r\nexport const thunkLoginSuccess = (data) => ({\r\n  type: THUNK_LOGIN_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const thunkLoginError = (data) => ({\r\n  type: THUNK_LOGIN_ERROR,\r\n  data,\r\n});\r\n\r\nexport const thunkIncrementAsync = (id, pw) => (dispatch) => {\r\n  axios.post(\r\n    'http://127.0.0.1:3001/auth/signin',\r\n    {\r\n      uid: id,\r\n      upw: pw,\r\n    },\r\n  ).then((response) => {\r\n    console.log(response);\r\n    dispatch(thunkLoginSuccess(response));\r\n  }).catch((err) => {\r\n    alert(err.response.data);\r\n    dispatch(thunkLoginError(err.response.data));\r\n    // idInput.current.value = '';\r\n    // pwInput.current.value = '';\r\n    // idInput.current.focus();\r\n  });\r\n};\r\n\r\nexport const initialState = {\r\n  loginState: false,\r\n  loginErrorMsg: '',\r\n};\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case THUNK_LOGIN_SUCCESS:\r\n      return { ...state, loginState: true };\r\n    case THUNK_LOGIN_ERROR:\r\n      return { ...state, loginErrorMsg: action.data };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default loginReducer;\r\n"]},"metadata":{},"sourceType":"module"}