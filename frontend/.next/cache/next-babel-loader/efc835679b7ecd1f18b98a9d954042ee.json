{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { combineReducers } from 'redux'; // Action Types\n\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\nexport const SAGA_UP = 'SAGA_UP';\nexport const SAGA_DOWN = 'SAGA_DOWN';\nexport const SAGA_UP_ASYNC = 'SAGA_UP_ASYNC';\nexport const SAGA_DOWN_ASYNC = 'SAGA_DOWN_ASYNC';\nexport const THUNK_UP_COUNTER = 'THUNK_UP_COUNTER';\nexport const THUNK_DOWN_COUNTER = 'THUNK_DOWN_COUNTER'; // Action Creator\n\nexport const increment = () => ({\n  type: INCREMENT_COUNTER\n});\nexport const decrement = () => ({\n  type: DECREMENT_COUNTER\n});\nexport const sagaIncrement = () => ({\n  type: SAGA_UP,\n  value: 1\n});\nexport const sagaDecrement = () => ({\n  type: SAGA_DOWN,\n  value: 1\n});\nexport const thunkIncrement = () => ({\n  type: THUNK_UP_COUNTER,\n  value: 1\n});\nexport const thunkDecrement = () => ({\n  type: THUNK_DOWN_COUNTER,\n  value: 1\n});\nexport const thunkIncrementAsync = () => dispatch => {\n  setTimeout(() => {\n    // 1 초뒤 dispatch 합니다\n    dispatch(thunkIncrement());\n  }, 1000);\n};\nexport const thunkDecrementAsync = () => dispatch => {\n  setTimeout(() => {\n    // 1 초뒤 dispatch 합니다\n    dispatch(thunkDecrement());\n  }, 1000);\n};\nexport const initialState = {\n  value: 1,\n  sagaValue: 1,\n  thunkValue: 1\n};\n\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return _objectSpread({}, state, {\n        value: state.value + 1\n      });\n\n    case DECREMENT_COUNTER:\n      return _objectSpread({}, state, {\n        value: state.value - 1\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nconst sagaCounterReducer = (state = initialState, action) => {\n  const newState = _objectSpread({}, state);\n\n  switch (action.type) {\n    case SAGA_UP_ASYNC:\n      newState.sagaValue += action.value;\n      break;\n\n    case SAGA_DOWN_ASYNC:\n      newState.sagaValue -= action.value;\n      break;\n\n    default:\n      return newState;\n  }\n\n  return newState;\n};\n\nconst thunkCounterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case THUNK_UP_COUNTER:\n      return _objectSpread({}, state, {\n        thunkValue: state.value + 1\n      });\n\n    case THUNK_DOWN_COUNTER:\n      return _objectSpread({}, state, {\n        thunkValue: state.value - 1\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n  sagaCounter: sagaCounterReducer,\n  thunkCounter: thunkCounterReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/reducers/rootReducer.js"],"names":["combineReducers","INCREMENT_COUNTER","DECREMENT_COUNTER","SAGA_UP","SAGA_DOWN","SAGA_UP_ASYNC","SAGA_DOWN_ASYNC","THUNK_UP_COUNTER","THUNK_DOWN_COUNTER","increment","type","decrement","sagaIncrement","value","sagaDecrement","thunkIncrement","thunkDecrement","thunkIncrementAsync","dispatch","setTimeout","thunkDecrementAsync","initialState","sagaValue","thunkValue","counterReducer","state","action","sagaCounterReducer","newState","thunkCounterReducer","rootReducer","counter","sagaCounter","thunkCounter"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\n// Action Types\r\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\r\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\r\n\r\nexport const SAGA_UP = 'SAGA_UP';\r\nexport const SAGA_DOWN = 'SAGA_DOWN';\r\nexport const SAGA_UP_ASYNC = 'SAGA_UP_ASYNC';\r\nexport const SAGA_DOWN_ASYNC = 'SAGA_DOWN_ASYNC';\r\n\r\nexport const THUNK_UP_COUNTER = 'THUNK_UP_COUNTER';\r\nexport const THUNK_DOWN_COUNTER = 'THUNK_DOWN_COUNTER';\r\n\r\n// Action Creator\r\nexport const increment = () => ({\r\n  type: INCREMENT_COUNTER,\r\n});\r\n\r\nexport const decrement = () => ({\r\n  type: DECREMENT_COUNTER,\r\n});\r\n\r\nexport const sagaIncrement = () => ({\r\n  type: SAGA_UP,\r\n  value: 1,\r\n});\r\n\r\nexport const sagaDecrement = () => ({\r\n  type: SAGA_DOWN,\r\n  value: 1,\r\n});\r\n\r\nexport const thunkIncrement = () => ({\r\n  type: THUNK_UP_COUNTER,\r\n  value: 1,\r\n});\r\n\r\nexport const thunkDecrement = () => ({\r\n  type: THUNK_DOWN_COUNTER,\r\n  value: 1,\r\n});\r\n\r\n\r\nexport const thunkIncrementAsync = () => (dispatch) => {\r\n  setTimeout(() => {\r\n    // 1 초뒤 dispatch 합니다\r\n    dispatch(thunkIncrement());\r\n  }, 1000);\r\n};\r\n\r\nexport const thunkDecrementAsync = () => (dispatch) => {\r\n  setTimeout(() => {\r\n    // 1 초뒤 dispatch 합니다\r\n    dispatch(thunkDecrement());\r\n  }, 1000);\r\n};\r\n\r\nexport const initialState = {\r\n  value: 1,\r\n  sagaValue: 1,\r\n  thunkValue: 1,\r\n};\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT_COUNTER:\r\n      return { ...state, value: state.value + 1 };\r\n    case DECREMENT_COUNTER:\r\n      return { ...state, value: state.value - 1 };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nconst sagaCounterReducer = (state = initialState, action) => {\r\n  const newState = { ...state };\r\n  switch (action.type) {\r\n    case SAGA_UP_ASYNC:\r\n      newState.sagaValue += action.value;\r\n      break;\r\n    case SAGA_DOWN_ASYNC:\r\n      newState.sagaValue -= action.value;\r\n      break;\r\n    default:\r\n      return newState;\r\n  }\r\n  return newState;\r\n};\r\n\r\nconst thunkCounterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case THUNK_UP_COUNTER:\r\n      return { ...state, thunkValue: state.value + 1 };\r\n    case THUNK_DOWN_COUNTER:\r\n      return { ...state, thunkValue: state.value - 1 };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  counter: counterReducer,\r\n  sagaCounter: sagaCounterReducer,\r\n  thunkCounter: thunkCounterReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}