{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport counterReducer from './counterReducer';\nimport sagaCounterReducer from './sagaCounterReducer';\nexport var THUNK_UP_COUNTER = 'THUNK_UP_COUNTER';\nexport var THUNK_DOWN_COUNTER = 'THUNK_DOWN_COUNTER';\nexport var thunkIncrement = function thunkIncrement() {\n  return {\n    type: THUNK_UP_COUNTER,\n    value: 3\n  };\n};\nexport var thunkDecrement = function thunkDecrement() {\n  return {\n    type: THUNK_DOWN_COUNTER,\n    value: 3\n  };\n};\nexport var thunkIncrementAsync = function thunkIncrementAsync() {\n  return function (dispatch) {\n    setTimeout(function () {\n      // 1 초뒤 dispatch 합니다\n      dispatch(thunkIncrement());\n    }, 1000);\n  };\n};\nexport var thunkDecrementAsync = function thunkDecrementAsync() {\n  return function (dispatch) {\n    setTimeout(function () {\n      // 1 초뒤 dispatch 합니다\n      dispatch(thunkDecrement());\n    }, 1000);\n  };\n};\nexport var initialState = {\n  value: 1,\n  sagaValue: 1,\n  thunkValue: 1\n};\n\nvar thunkCounterReducer = function thunkCounterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case THUNK_UP_COUNTER:\n      return _objectSpread({}, state, {\n        thunkValue: state.thunkValue + action.value\n      });\n\n    case THUNK_DOWN_COUNTER:\n      return _objectSpread({}, state, {\n        thunkValue: state.thunkValue - action.value\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nvar rootReducer = combineReducers({\n  counter: counterReducer,\n  sagaCounter: sagaCounterReducer,\n  thunkCounter: thunkCounterReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/reducers/rootReducer.js"],"names":["combineReducers","counterReducer","sagaCounterReducer","THUNK_UP_COUNTER","THUNK_DOWN_COUNTER","thunkIncrement","type","value","thunkDecrement","thunkIncrementAsync","dispatch","setTimeout","thunkDecrementAsync","initialState","sagaValue","thunkValue","thunkCounterReducer","state","action","rootReducer","counter","sagaCounter","thunkCounter"],"mappings":";;;;;;;;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AAGP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AACnCC,IAAAA,IAAI,EAAEH,gBAD6B;AAEnCI,IAAAA,KAAK,EAAE;AAF4B,GAAP;AAAA,CAAvB;AAKP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AACnCF,IAAAA,IAAI,EAAEF,kBAD6B;AAEnCG,IAAAA,KAAK,EAAE;AAF4B,GAAP;AAAA,CAAvB;AAKP,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAAM,UAACC,QAAD,EAAc;AACrDC,IAAAA,UAAU,CAAC,YAAM;AACf;AACAD,MAAAA,QAAQ,CAACL,cAAc,EAAf,CAAR;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GALkC;AAAA,CAA5B;AAOP,OAAO,IAAMO,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAAM,UAACF,QAAD,EAAc;AACrDC,IAAAA,UAAU,CAAC,YAAM;AACf;AACAD,MAAAA,QAAQ,CAACF,cAAc,EAAf,CAAR;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GALkC;AAAA,CAA5B;AAOP,OAAO,IAAMK,YAAY,GAAG;AAC1BN,EAAAA,KAAK,EAAE,CADmB;AAE1BO,EAAAA,SAAS,EAAE,CAFe;AAG1BC,EAAAA,UAAU,EAAE;AAHc,CAArB;;AAMP,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC5D,UAAQA,MAAM,CAACZ,IAAf;AACE,SAAKH,gBAAL;AACE,+BAAYc,KAAZ;AAAmBF,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBG,MAAM,CAACX;AAAzD;;AACF,SAAKH,kBAAL;AACE,+BAAYa,KAAZ;AAAmBF,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBG,MAAM,CAACX;AAAzD;;AACF;AACE,+BAAYU,KAAZ;AANJ;AAQD,CATD;;AAWA,IAAME,WAAW,GAAGnB,eAAe,CAAC;AAClCoB,EAAAA,OAAO,EAAEnB,cADyB;AAElCoB,EAAAA,WAAW,EAAEnB,kBAFqB;AAGlCoB,EAAAA,YAAY,EAAEN;AAHoB,CAAD,CAAnC;AAMA,eAAeG,WAAf","sourcesContent":["import { combineReducers } from 'redux';\r\nimport counterReducer from './counterReducer';\r\nimport sagaCounterReducer from './sagaCounterReducer';\r\n\r\nexport const THUNK_UP_COUNTER = 'THUNK_UP_COUNTER';\r\nexport const THUNK_DOWN_COUNTER = 'THUNK_DOWN_COUNTER';\r\n\r\n\r\nexport const thunkIncrement = () => ({\r\n  type: THUNK_UP_COUNTER,\r\n  value: 3,\r\n});\r\n\r\nexport const thunkDecrement = () => ({\r\n  type: THUNK_DOWN_COUNTER,\r\n  value: 3,\r\n});\r\n\r\nexport const thunkIncrementAsync = () => (dispatch) => {\r\n  setTimeout(() => {\r\n    // 1 초뒤 dispatch 합니다\r\n    dispatch(thunkIncrement());\r\n  }, 1000);\r\n};\r\n\r\nexport const thunkDecrementAsync = () => (dispatch) => {\r\n  setTimeout(() => {\r\n    // 1 초뒤 dispatch 합니다\r\n    dispatch(thunkDecrement());\r\n  }, 1000);\r\n};\r\n\r\nexport const initialState = {\r\n  value: 1,\r\n  sagaValue: 1,\r\n  thunkValue: 1,\r\n};\r\n\r\nconst thunkCounterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case THUNK_UP_COUNTER:\r\n      return { ...state, thunkValue: state.thunkValue + action.value };\r\n    case THUNK_DOWN_COUNTER:\r\n      return { ...state, thunkValue: state.thunkValue - action.value };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  counter: counterReducer,\r\n  sagaCounter: sagaCounterReducer,\r\n  thunkCounter: thunkCounterReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}