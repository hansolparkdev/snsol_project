{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable camelcase */\nexport const SET_USERNAME_STARTED = 'SET_USERNAME_STARTED';\nexport const SET_PASSWORD_STARTED = 'SET_PASSWORD_STARTED';\nexport const DO_LOGIN_STARTED = 'DO_LOGIN_STARTED';\nexport const DO_LOGIN_SUCCESS = 'DO_LOGIN_SUCCESS';\nexport const DO_LOGIN_FAIL = 'DO_LOGIN_FAIL';\nexport const SESSION_CHECK_STARTED = 'SESSION_CHECK_STARTED';\nexport const SESSION_CHECK_HAVE = 'SESSION_CHECK_HAVE';\nexport const SESSION_CHECK_NONE = 'SESSION_CHECK_NONE'; // SAGA Action\n\nexport const SET_USERNAME = 'SET_USERNAME';\nexport const SET_PASSWORD = 'SET_PASSWORD';\nexport const DO_LOGIN = 'DO_LOGIN';\nexport const SESSION_CHECK = 'SESSION_CHECK';\nexport const initialState = {\n  username: '',\n  password: '',\n  name: '',\n  loginStatus: undefined,\n  loginErrorMsg: ''\n};\n\nconst sagaLoginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USERNAME_STARTED:\n      {\n        return _objectSpread({}, state, {\n          username: action.payload\n        });\n      }\n\n    case SET_PASSWORD_STARTED:\n      {\n        return _objectSpread({}, state, {\n          password: action.payload\n        });\n      }\n\n    case DO_LOGIN_STARTED:\n      {\n        return _objectSpread({}, state, {\n          loginStatus: 'ongoing'\n        });\n      }\n\n    case DO_LOGIN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loginStatus: 'success'\n        });\n      }\n\n    case DO_LOGIN_FAIL:\n      {\n        return _objectSpread({}, state, {\n          loginStatus: 'failed'\n        });\n      }\n\n    case SESSION_CHECK_STARTED:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case SESSION_CHECK_HAVE:\n      {\n        const {\n          user_id,\n          name\n        } = action.payload.session_data.user;\n        const username = user_id;\n        return _objectSpread({}, state, {\n          username,\n          name,\n          loginStatus: 'success'\n        });\n      }\n\n    case SESSION_CHECK_NONE:\n      {\n        return _objectSpread({}, state, {\n          loginStatus: 'fail'\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default sagaLoginReducer;","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/reducers/sagaLoginReducer.js"],"names":["SET_USERNAME_STARTED","SET_PASSWORD_STARTED","DO_LOGIN_STARTED","DO_LOGIN_SUCCESS","DO_LOGIN_FAIL","SESSION_CHECK_STARTED","SESSION_CHECK_HAVE","SESSION_CHECK_NONE","SET_USERNAME","SET_PASSWORD","DO_LOGIN","SESSION_CHECK","initialState","username","password","name","loginStatus","undefined","loginErrorMsg","sagaLoginReducer","state","action","type","payload","user_id","session_data","user"],"mappings":";;;;;;AAAA;AACA,OAAO,MAAMA,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B,C,CAEP;;AACA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,EADgB;AAE1BC,EAAAA,QAAQ,EAAE,EAFgB;AAG1BC,EAAAA,IAAI,EAAE,EAHoB;AAI1BC,EAAAA,WAAW,EAAEC,SAJa;AAK1BC,EAAAA,aAAa,EAAE;AALW,CAArB;;AAQP,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKtB,oBAAL;AAA2B;AACzB,iCAAYoB,KAAZ;AAAmBP,UAAAA,QAAQ,EAAEQ,MAAM,CAACE;AAApC;AACD;;AACD,SAAKtB,oBAAL;AAA2B;AACzB,iCAAYmB,KAAZ;AAAmBN,UAAAA,QAAQ,EAAEO,MAAM,CAACE;AAApC;AACD;;AACD,SAAKrB,gBAAL;AAAuB;AACrB,iCAAYkB,KAAZ;AAAmBJ,UAAAA,WAAW,EAAE;AAAhC;AACD;;AACD,SAAKb,gBAAL;AAAuB;AACrB,iCAAYiB,KAAZ;AAAmBJ,UAAAA,WAAW,EAAE;AAAhC;AACD;;AACD,SAAKZ,aAAL;AAAoB;AAClB,iCAAYgB,KAAZ;AAAmBJ,UAAAA,WAAW,EAAE;AAAhC;AACD;;AACD,SAAKX,qBAAL;AAA4B;AAC1B,iCAAYe,KAAZ;AACD;;AACD,SAAKd,kBAAL;AAAyB;AACvB,cAAM;AAAEkB,UAAAA,OAAF;AAAWT,UAAAA;AAAX,YAAoBM,MAAM,CAACE,OAAP,CAAeE,YAAf,CAA4BC,IAAtD;AACA,cAAMb,QAAQ,GAAGW,OAAjB;AACA,iCACKJ,KADL;AAEEP,UAAAA,QAFF;AAGEE,UAAAA,IAHF;AAIEC,UAAAA,WAAW,EAAE;AAJf;AAMD;;AACD,SAAKT,kBAAL;AAAyB;AACvB,iCAAYa,KAAZ;AAAmBJ,UAAAA,WAAW,EAAE;AAAhC;AACD;;AACD;AAAS;AACP,eAAOI,KAAP;AACD;AAlCH;AAoCD,CArCD;;AAuCA,eAAeD,gBAAf","sourcesContent":["/* eslint-disable camelcase */\r\nexport const SET_USERNAME_STARTED = 'SET_USERNAME_STARTED';\r\nexport const SET_PASSWORD_STARTED = 'SET_PASSWORD_STARTED';\r\nexport const DO_LOGIN_STARTED = 'DO_LOGIN_STARTED';\r\nexport const DO_LOGIN_SUCCESS = 'DO_LOGIN_SUCCESS';\r\nexport const DO_LOGIN_FAIL = 'DO_LOGIN_FAIL';\r\nexport const SESSION_CHECK_STARTED = 'SESSION_CHECK_STARTED';\r\nexport const SESSION_CHECK_HAVE = 'SESSION_CHECK_HAVE';\r\nexport const SESSION_CHECK_NONE = 'SESSION_CHECK_NONE';\r\n\r\n// SAGA Action\r\nexport const SET_USERNAME = 'SET_USERNAME';\r\nexport const SET_PASSWORD = 'SET_PASSWORD';\r\nexport const DO_LOGIN = 'DO_LOGIN';\r\nexport const SESSION_CHECK = 'SESSION_CHECK';\r\n\r\nexport const initialState = {\r\n  username: '',\r\n  password: '',\r\n  name: '',\r\n  loginStatus: undefined,\r\n  loginErrorMsg: '',\r\n};\r\n\r\nconst sagaLoginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USERNAME_STARTED: {\r\n      return { ...state, username: action.payload };\r\n    }\r\n    case SET_PASSWORD_STARTED: {\r\n      return { ...state, password: action.payload };\r\n    }\r\n    case DO_LOGIN_STARTED: {\r\n      return { ...state, loginStatus: 'ongoing' };\r\n    }\r\n    case DO_LOGIN_SUCCESS: {\r\n      return { ...state, loginStatus: 'success' };\r\n    }\r\n    case DO_LOGIN_FAIL: {\r\n      return { ...state, loginStatus: 'failed' };\r\n    }\r\n    case SESSION_CHECK_STARTED: {\r\n      return { ...state };\r\n    }\r\n    case SESSION_CHECK_HAVE: {\r\n      const { user_id, name } = action.payload.session_data.user;\r\n      const username = user_id;\r\n      return {\r\n        ...state,\r\n        username,\r\n        name,\r\n        loginStatus: 'success',\r\n      };\r\n    }\r\n    case SESSION_CHECK_NONE: {\r\n      return { ...state, loginStatus: 'fail' };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default sagaLoginReducer;\r\n"]},"metadata":{},"sourceType":"module"}