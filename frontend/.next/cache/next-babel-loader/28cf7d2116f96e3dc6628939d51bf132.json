{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { takeEvery, put, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SET_USERNAME_STARTED, SET_PASSWORD_STARTED, SET_USERNAME, SET_PASSWORD, DO_LOGIN, DO_LOGIN_STARTED, DO_LOGIN_SUCCESS, DO_LOGIN_FAIL } from '../reducers/sagaLoginReducer'; // import { SAGA_SIGN_IN } from '../reducers/sagaLoginReducer';\n\nvar setUsername = /*#__PURE__*/_regeneratorRuntime.mark(function setUsername(action) {\n  return _regeneratorRuntime.wrap(function setUsername$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return put({\n            type: SET_USERNAME_STARTED,\n            payload: action.payload\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, setUsername);\n});\n\nvar setPassword = /*#__PURE__*/_regeneratorRuntime.mark(function setPassword(action) {\n  return _regeneratorRuntime.wrap(function setPassword$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return put({\n            type: SET_PASSWORD_STARTED,\n            payload: action.payload\n          });\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, setPassword);\n});\n\nvar doLogin = /*#__PURE__*/_regeneratorRuntime.mark(function doLogin(action) {\n  var json, _ref, data;\n\n  return _regeneratorRuntime.wrap(function doLogin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return put({\n            type: DO_LOGIN_STARTED\n          });\n\n        case 3:\n          json = {\n            uid: action.payload.username,\n            upw: action.payload.password\n          }; // console.log(json);\n\n          _context3.next = 6;\n          return call([axios, 'post'], 'http://127.0.0.1:3001/auth/signin', json);\n\n        case 6:\n          _ref = _context3.sent;\n          data = _ref.data;\n          _context3.next = 10;\n          return put({\n            type: DO_LOGIN_SUCCESS\n          });\n\n        case 10:\n          _context3.next = 16;\n          break;\n\n        case 12:\n          _context3.prev = 12;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 16;\n          return put({\n            type: DO_LOGIN_FAIL\n          });\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, doLogin, null, [[0, 12]]);\n}); // watch\n\n\nexport var watchSetUsername = /*#__PURE__*/_regeneratorRuntime.mark(function watchSetUsername() {\n  return _regeneratorRuntime.wrap(function watchSetUsername$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SET_USERNAME, setUsername);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, watchSetUsername);\n});\nexport var watchSetUserpassword = /*#__PURE__*/_regeneratorRuntime.mark(function watchSetUserpassword() {\n  return _regeneratorRuntime.wrap(function watchSetUserpassword$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(SET_PASSWORD, setPassword);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, watchSetUserpassword);\n});\nexport var watchLogin = /*#__PURE__*/_regeneratorRuntime.mark(function watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(DO_LOGIN, doLogin);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, watchLogin);\n});","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/sagas/login.js"],"names":["takeEvery","put","call","axios","SET_USERNAME_STARTED","SET_PASSWORD_STARTED","SET_USERNAME","SET_PASSWORD","DO_LOGIN","DO_LOGIN_STARTED","DO_LOGIN_SUCCESS","DO_LOGIN_FAIL","setUsername","action","type","payload","setPassword","doLogin","json","uid","username","upw","password","data","watchSetUsername","watchSetUserpassword","watchLogin"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,EACwBC,oBADxB,EAEEC,YAFF,EAEgBC,YAFhB,EAE8BC,QAF9B,EAEwCC,gBAFxC,EAGEC,gBAHF,EAGoBC,aAHpB,QAIO,8BAJP,C,CAKA;;AAEA,IAAMC,WAAW,yCAAG,SAAUA,WAAV,CAAsBC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB,iBAAMZ,GAAG,CAAC;AAAEa,YAAAA,IAAI,EAAEV,oBAAR;AAA8BW,YAAAA,OAAO,EAAEF,MAAM,CAACE;AAA9C,WAAD,CAAT;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUH,WAAV;AAAA,CAAH,CAAjB;;AAGA,IAAMI,WAAW,yCAAG,SAAUA,WAAV,CAAsBH,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB,iBAAMZ,GAAG,CAAC;AAAEa,YAAAA,IAAI,EAAET,oBAAR;AAA8BU,YAAAA,OAAO,EAAEF,MAAM,CAACE;AAA9C,WAAD,CAAT;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUC,WAAV;AAAA,CAAH,CAAjB;;AAGA,IAAMC,OAAO,yCAAG,SAAUA,OAAV,CAAkBJ,MAAlB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGZ,iBAAMZ,GAAG,CAAC;AAAEa,YAAAA,IAAI,EAAEL;AAAR,WAAD,CAAT;;AAHY;AAINS,UAAAA,IAJM,GAIC;AACXC,YAAAA,GAAG,EAAEN,MAAM,CAACE,OAAP,CAAeK,QADT;AAEXC,YAAAA,GAAG,EAAER,MAAM,CAACE,OAAP,CAAeO;AAFT,WAJD,EAQZ;;AARY;AASK,iBAAMpB,IAAI,CAAC,CAACC,KAAD,EAAQ,MAAR,CAAD,EAAkB,mCAAlB,EAAuDe,IAAvD,CAAV;;AATL;AAAA;AASJK,UAAAA,IATI,QASJA,IATI;AAAA;AAUZ,iBAAMtB,GAAG,CAAC;AAAEa,YAAAA,IAAI,EAAEJ;AAAR,WAAD,CAAT;;AAVY;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAYZ,iBAAMT,GAAG,CAAC;AAAEa,YAAAA,IAAI,EAAEH;AAAR,WAAD,CAAT;;AAZY;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUM,OAAV;AAAA,CAAH,CAAb,C,CAgBA;;;AACA,OAAO,IAAMO,gBAAgB,yCAAG,SAAUA,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9B,iBAAMxB,SAAS,CAACM,YAAD,EAAeM,WAAf,CAAf;;AAD8B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUY,gBAAV;AAAA,CAAH,CAAtB;AAGP,OAAO,IAAMC,oBAAoB,yCAAG,SAAUA,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAClC,iBAAMzB,SAAS,CAACO,YAAD,EAAeS,WAAf,CAAf;;AADkC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUS,oBAAV;AAAA,CAAH,CAA1B;AAIP,OAAO,IAAMC,UAAU,yCAAG,SAAUA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACxB,iBAAM1B,SAAS,CAACQ,QAAD,EAAWS,OAAX,CAAf;;AADwB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUS,UAAV;AAAA,CAAH,CAAhB","sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  SET_USERNAME_STARTED, SET_PASSWORD_STARTED,\r\n  SET_USERNAME, SET_PASSWORD, DO_LOGIN, DO_LOGIN_STARTED,\r\n  DO_LOGIN_SUCCESS, DO_LOGIN_FAIL,\r\n} from '../reducers/sagaLoginReducer';\r\n// import { SAGA_SIGN_IN } from '../reducers/sagaLoginReducer';\r\n\r\nconst setUsername = function* setUsername(action) {\r\n  yield put({ type: SET_USERNAME_STARTED, payload: action.payload });\r\n};\r\nconst setPassword = function* setPassword(action) {\r\n  yield put({ type: SET_PASSWORD_STARTED, payload: action.payload });\r\n};\r\nconst doLogin = function* doLogin(action) {\r\n  // yield console.log(action);\r\n  try {\r\n    yield put({ type: DO_LOGIN_STARTED });\r\n    const json = {\r\n      uid: action.payload.username,\r\n      upw: action.payload.password,\r\n    };\r\n    // console.log(json);\r\n    const { data } = yield call([axios, 'post'], 'http://127.0.0.1:3001/auth/signin', json);\r\n    yield put({ type: DO_LOGIN_SUCCESS });\r\n  } catch (e) {\r\n    yield put({ type: DO_LOGIN_FAIL });\r\n  }\r\n};\r\n\r\n// watch\r\nexport const watchSetUsername = function* watchSetUsername() {\r\n  yield takeEvery(SET_USERNAME, setUsername);\r\n};\r\nexport const watchSetUserpassword = function* watchSetUserpassword() {\r\n  yield takeEvery(SET_PASSWORD, setPassword);\r\n};\r\n\r\nexport const watchLogin = function* watchLogin() {\r\n  yield takeEvery(DO_LOGIN, doLogin);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}