{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\n\n/* eslint-disable no-shadow */\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { Fragment } from 'react'; // import App from 'next/app';\n\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport Head from 'next/head';\nimport moment from 'moment';\nimport Layout from '../components/Layout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from '../redux/store';\nmoment.locale('ko'); // class RootApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n//     // Anything returned here can be access by the client\n//     return { pageProps };\n//   }\n//   render() {\n//     const { Component, pageProps, store } = this.props;\n//     return (\n//       <Fragment>\n//         <Head>\n//           <title>Devsol Blog</title>\n//         </Head>\n//         <Provider store={store}>\n//           <Layout>\n//             <Component {...pageProps} />\n//           </Layout>\n//         </Provider>\n//       </Fragment>\n//     );\n//   }\n// }\n\nvar RootApp = function RootApp(props) {\n  var Component = props.Component,\n      pageProps = props.pageProps,\n      store = props.store;\n  return __jsx(Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Devsol Blog\")), __jsx(Provider, {\n    store: store\n  }, __jsx(Layout, null, __jsx(Component, pageProps))));\n};\n\nRootApp.getInitialProps = function _callee(context) {\n  var Component, ctx, pageProps;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // console.log(context.Component.getInitialProps);\n          // console.log(context.ctx);\n          Component = context.Component, ctx = context.ctx;\n\n          if (!Component.getInitialProps) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n        case 4:\n          _context.t0 = _context.sent;\n          _context.next = 8;\n          break;\n\n        case 7:\n          _context.t0 = {};\n\n        case 8:\n          pageProps = _context.t0;\n          console.log(pageProps);\n          return _context.abrupt(\"return\", {\n            pageProps: pageProps\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default withRedux(function () {\n  return store;\n})(RootApp); // export default RootApp;","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/pages/_app.jsx"],"names":["React","Fragment","Provider","withRedux","Head","moment","Layout","store","locale","RootApp","props","Component","pageProps","getInitialProps","context","ctx","console","log"],"mappings":";;;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,sCAAP;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AAEAF,MAAM,CAACG,MAAP,CAAc,IAAd,E,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAAA,MACjBC,SADiB,GACeD,KADf,CACjBC,SADiB;AAAA,MACNC,SADM,GACeF,KADf,CACNE,SADM;AAAA,MACKL,KADL,GACeG,KADf,CACKH,KADL;AAEzB,SACE,MAAC,QAAD,QACE,MAAC,IAAD,QACE,mCADF,CADF,EAIE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA;AAAjB,KACE,MAAC,MAAD,QACE,MAAC,SAAD,EAAeK,SAAf,CADF,CADF,CAJF,CADF;AAYD,CAdD;;AAgBAH,OAAO,CAACI,eAAR,GAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACxB;AACA;AACQH,UAAAA,SAHgB,GAGGG,OAHH,CAGhBH,SAHgB,EAGLI,GAHK,GAGGD,OAHH,CAGLC,GAHK;;AAAA,eAINJ,SAAS,CAACE,eAJJ;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAI4BF,SAAS,CAACE,eAAV,CAA0BE,GAA1B,CAJ5B;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,wBAI6D,EAJ7D;;AAAA;AAIlBH,UAAAA,SAJkB;AAKxBI,UAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AALwB,2CAMjB;AAAEA,YAAAA,SAAS,EAATA;AAAF,WANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AASA,eAAeT,SAAS,CAAC;AAAA,SAAOI,KAAP;AAAA,CAAD,CAAT,CAAyBE,OAAzB,CAAf,C,CACA","sourcesContent":["/* eslint-disable no-shadow */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { Fragment } from 'react';\r\n// import App from 'next/app';\r\nimport { Provider } from 'react-redux';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport Head from 'next/head';\r\nimport moment from 'moment';\r\nimport Layout from '../components/Layout';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport store from '../redux/store';\r\n\r\nmoment.locale('ko');\r\n\r\n// class RootApp extends App {\r\n//   static async getInitialProps({ Component, ctx }) {\r\n//     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n//     // Anything returned here can be access by the client\r\n//     return { pageProps };\r\n//   }\r\n\r\n//   render() {\r\n//     const { Component, pageProps, store } = this.props;\r\n//     return (\r\n//       <Fragment>\r\n//         <Head>\r\n//           <title>Devsol Blog</title>\r\n//         </Head>\r\n//         <Provider store={store}>\r\n//           <Layout>\r\n//             <Component {...pageProps} />\r\n//           </Layout>\r\n//         </Provider>\r\n//       </Fragment>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst RootApp = (props) => {\r\n  const { Component, pageProps, store } = props;\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>Devsol Blog</title>\r\n      </Head>\r\n      <Provider store={store}>\r\n        <Layout>\r\n          <Component {...pageProps} />\r\n        </Layout>\r\n      </Provider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRootApp.getInitialProps = async (context) => {\r\n  // console.log(context.Component.getInitialProps);\r\n  // console.log(context.ctx);\r\n  const { Component, ctx } = context;\r\n  const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n  console.log(pageProps);\r\n  return { pageProps };\r\n};\r\n\r\nexport default withRedux(() => (store))(RootApp);\r\n// export default RootApp;\r\n"]},"metadata":{},"sourceType":"module"}