{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { takeEvery, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SET_USERNAME_STARTED, SET_PASSWORD_STARTED, SET_USERNAME, SET_PASSWORD } from '../reducers/sagaLoginReducer'; // import { SAGA_SIGN_IN } from '../reducers/sagaLoginReducer';\n\nvar setUsername = /*#__PURE__*/_regeneratorRuntime.mark(function setUsername(action) {\n  return _regeneratorRuntime.wrap(function setUsername$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return put({\n            type: SET_USERNAME_STARTED,\n            payload: action.payload\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, setUsername);\n});\n\nvar setPassword = /*#__PURE__*/_regeneratorRuntime.mark(function setPassword(action) {\n  return _regeneratorRuntime.wrap(function setPassword$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return put({\n            type: SET_PASSWORD_STARTED,\n            payload: action.payload\n          });\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, setPassword);\n}); // const attemptLogin = () => {\n//   return Axios.get('http://127.0.0.1:3001/auth/siginin').then((response) => response.data);\n// };\n// watch\n\n\nexport var watchSetUsername = /*#__PURE__*/_regeneratorRuntime.mark(function watchSetUsername() {\n  return _regeneratorRuntime.wrap(function watchSetUsername$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(SET_USERNAME, setUsername);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, watchSetUsername);\n});\nexport var watchSetUserpassword = /*#__PURE__*/_regeneratorRuntime.mark(function watchSetUserpassword() {\n  return _regeneratorRuntime.wrap(function watchSetUserpassword$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SET_PASSWORD, setPassword);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, watchSetUserpassword);\n});\nexport var watchLogin = /*#__PURE__*/_regeneratorRuntime.mark(function watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery('DO_LOGIN', /*#__PURE__*/_regeneratorRuntime.mark(function _callee(action) {\n            return _regeneratorRuntime.wrap(function _callee$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.next = 2;\n                    return console.log(action);\n\n                  case 2:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, watchLogin);\n});","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/sagas/login.js"],"names":["takeEvery","put","delay","axios","SET_USERNAME_STARTED","SET_PASSWORD_STARTED","SET_USERNAME","SET_PASSWORD","setUsername","action","type","payload","setPassword","watchSetUsername","watchSetUserpassword","watchLogin","console","log"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,KAAzB,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,EACwBC,oBADxB,EAEEC,YAFF,EAEgBC,YAFhB,QAGO,8BAHP,C,CAIA;;AAEA,IAAMC,WAAW,yCAAG,SAAUA,WAAV,CAAsBC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB,iBAAMR,GAAG,CAAC;AAAES,YAAAA,IAAI,EAAEN,oBAAR;AAA8BO,YAAAA,OAAO,EAAEF,MAAM,CAACE;AAA9C,WAAD,CAAT;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUH,WAAV;AAAA,CAAH,CAAjB;;AAGA,IAAMI,WAAW,yCAAG,SAAUA,WAAV,CAAsBH,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB,iBAAMR,GAAG,CAAC;AAAES,YAAAA,IAAI,EAAEL,oBAAR;AAA8BM,YAAAA,OAAO,EAAEF,MAAM,CAACE;AAA9C,WAAD,CAAT;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUC,WAAV;AAAA,CAAH,CAAjB,C,CAIA;AACA;AACA;AAEA;;;AACA,OAAO,IAAMC,gBAAgB,yCAAG,SAAUA,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9B,iBAAMb,SAAS,CAACM,YAAD,EAAeE,WAAf,CAAf;;AAD8B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUK,gBAAV;AAAA,CAAH,CAAtB;AAGP,OAAO,IAAMC,oBAAoB,yCAAG,SAAUA,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAClC,iBAAMd,SAAS,CAACO,YAAD,EAAeK,WAAf,CAAf;;AADkC;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUE,oBAAV;AAAA,CAAH,CAA1B;AAIP,OAAO,IAAMC,UAAU,yCAAG,SAAUA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACxB,iBAAMf,SAAS,CAAC,UAAD,wCAAa,iBAAWS,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1B,2BAAMO,OAAO,CAACC,GAAR,CAAYR,MAAZ,CAAN;;AAD0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAb,EAAf;;AADwB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUM,UAAV;AAAA,CAAH,CAAhB","sourcesContent":["import { takeEvery, put, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  SET_USERNAME_STARTED, SET_PASSWORD_STARTED,\r\n  SET_USERNAME, SET_PASSWORD,\r\n} from '../reducers/sagaLoginReducer';\r\n// import { SAGA_SIGN_IN } from '../reducers/sagaLoginReducer';\r\n\r\nconst setUsername = function* setUsername(action) {\r\n  yield put({ type: SET_USERNAME_STARTED, payload: action.payload });\r\n};\r\nconst setPassword = function* setPassword(action) {\r\n  yield put({ type: SET_PASSWORD_STARTED, payload: action.payload });\r\n};\r\n\r\n// const attemptLogin = () => {\r\n//   return Axios.get('http://127.0.0.1:3001/auth/siginin').then((response) => response.data);\r\n// };\r\n\r\n// watch\r\nexport const watchSetUsername = function* watchSetUsername() {\r\n  yield takeEvery(SET_USERNAME, setUsername);\r\n};\r\nexport const watchSetUserpassword = function* watchSetUserpassword() {\r\n  yield takeEvery(SET_PASSWORD, setPassword);\r\n};\r\n\r\nexport const watchLogin = function* watchLogin() {\r\n  yield takeEvery('DO_LOGIN', function* (action) {\r\n    yield console.log(action);\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}