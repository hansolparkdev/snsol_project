{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable camelcase */\nexport var SET_USERNAME_STARTED = 'SET_USERNAME_STARTED';\nexport var SET_PASSWORD_STARTED = 'SET_PASSWORD_STARTED';\nexport var DO_LOGIN_STARTED = 'DO_LOGIN_STARTED';\nexport var DO_LOGIN_SUCCESS = 'DO_LOGIN_SUCCESS';\nexport var DO_LOGIN_FAIL = 'DO_LOGIN_FAIL';\nexport var SESSION_CHECK_STARTED = 'SESSION_CHECK_STARTED'; // SAGA Action\n\nexport var SET_USERNAME = 'SET_USERNAME';\nexport var SET_PASSWORD = 'SET_PASSWORD';\nexport var DO_LOGIN = 'DO_LOGIN';\nexport var SESSION_CHECK = 'SESSION_CHECK';\nexport var initialState = {\n  username: '',\n  password: '',\n  name: '',\n  loginStatus: undefined,\n  loginErrorMsg: ''\n};\n\nvar sagaLoginReducer = function sagaLoginReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USERNAME_STARTED:\n      {\n        return _objectSpread({}, state, {\n          username: action.payload\n        });\n      }\n\n    case SET_PASSWORD_STARTED:\n      {\n        return _objectSpread({}, state, {\n          password: action.payload\n        });\n      }\n\n    case DO_LOGIN_STARTED:\n      {\n        return _objectSpread({}, state, {\n          loginStatus: 'ongoing'\n        });\n      }\n\n    case DO_LOGIN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loginStatus: 'success'\n        });\n      }\n\n    case DO_LOGIN_FAIL:\n      {\n        return _objectSpread({}, state, {\n          loginStatus: 'failed'\n        });\n      }\n\n    case SESSION_CHECK_STARTED:\n      {\n        var _action$payload$sessi = action.payload.session_data.user,\n            user_id = _action$payload$sessi.user_id,\n            name = _action$payload$sessi.name;\n        var username = user_id;\n        console.log(action.payload.session_data); // console.log(user_id);\n        // console.log(name);\n\n        return _objectSpread({}, state, {\n          // username,\n          // name,\n          loginStatus: 'success'\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default sagaLoginReducer;","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/reducers/sagaLoginReducer.js"],"names":["SET_USERNAME_STARTED","SET_PASSWORD_STARTED","DO_LOGIN_STARTED","DO_LOGIN_SUCCESS","DO_LOGIN_FAIL","SESSION_CHECK_STARTED","SET_USERNAME","SET_PASSWORD","DO_LOGIN","SESSION_CHECK","initialState","username","password","name","loginStatus","undefined","loginErrorMsg","sagaLoginReducer","state","action","type","payload","session_data","user","user_id","console","log"],"mappings":";;;;;;;;;;;;AAAA;AACA,OAAO,IAAMA,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B,C,CAEP;;AACA,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,EADgB;AAE1BC,EAAAA,QAAQ,EAAE,EAFgB;AAG1BC,EAAAA,IAAI,EAAE,EAHoB;AAI1BC,EAAAA,WAAW,EAAEC,SAJa;AAK1BC,EAAAA,aAAa,EAAE;AALW,CAArB;;AAQP,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKpB,oBAAL;AAA2B;AACzB,iCAAYkB,KAAZ;AAAmBP,UAAAA,QAAQ,EAAEQ,MAAM,CAACE;AAApC;AACD;;AACD,SAAKpB,oBAAL;AAA2B;AACzB,iCAAYiB,KAAZ;AAAmBN,UAAAA,QAAQ,EAAEO,MAAM,CAACE;AAApC;AACD;;AACD,SAAKnB,gBAAL;AAAuB;AACrB,iCAAYgB,KAAZ;AAAmBJ,UAAAA,WAAW,EAAE;AAAhC;AACD;;AACD,SAAKX,gBAAL;AAAuB;AACrB,iCAAYe,KAAZ;AAAmBJ,UAAAA,WAAW,EAAE;AAAhC;AACD;;AACD,SAAKV,aAAL;AAAoB;AAClB,iCAAYc,KAAZ;AAAmBJ,UAAAA,WAAW,EAAE;AAAhC;AACD;;AACD,SAAKT,qBAAL;AAA4B;AAAA,oCACAc,MAAM,CAACE,OAAP,CAAeC,YAAf,CAA4BC,IAD5B;AAAA,YAClBC,OADkB,yBAClBA,OADkB;AAAA,YACTX,IADS,yBACTA,IADS;AAE1B,YAAMF,QAAQ,GAAGa,OAAjB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACE,OAAP,CAAeC,YAA3B,EAH0B,CAI1B;AACA;;AACA,iCACKJ,KADL;AAEE;AACA;AACAJ,UAAAA,WAAW,EAAE;AAJf;AAMD;;AACD;AAAS;AACP,eAAOI,KAAP;AACD;AA/BH;AAiCD,CAlCD;;AAoCA,eAAeD,gBAAf","sourcesContent":["/* eslint-disable camelcase */\r\nexport const SET_USERNAME_STARTED = 'SET_USERNAME_STARTED';\r\nexport const SET_PASSWORD_STARTED = 'SET_PASSWORD_STARTED';\r\nexport const DO_LOGIN_STARTED = 'DO_LOGIN_STARTED';\r\nexport const DO_LOGIN_SUCCESS = 'DO_LOGIN_SUCCESS';\r\nexport const DO_LOGIN_FAIL = 'DO_LOGIN_FAIL';\r\nexport const SESSION_CHECK_STARTED = 'SESSION_CHECK_STARTED';\r\n\r\n// SAGA Action\r\nexport const SET_USERNAME = 'SET_USERNAME';\r\nexport const SET_PASSWORD = 'SET_PASSWORD';\r\nexport const DO_LOGIN = 'DO_LOGIN';\r\nexport const SESSION_CHECK = 'SESSION_CHECK';\r\n\r\nexport const initialState = {\r\n  username: '',\r\n  password: '',\r\n  name: '',\r\n  loginStatus: undefined,\r\n  loginErrorMsg: '',\r\n};\r\n\r\nconst sagaLoginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USERNAME_STARTED: {\r\n      return { ...state, username: action.payload };\r\n    }\r\n    case SET_PASSWORD_STARTED: {\r\n      return { ...state, password: action.payload };\r\n    }\r\n    case DO_LOGIN_STARTED: {\r\n      return { ...state, loginStatus: 'ongoing' };\r\n    }\r\n    case DO_LOGIN_SUCCESS: {\r\n      return { ...state, loginStatus: 'success' };\r\n    }\r\n    case DO_LOGIN_FAIL: {\r\n      return { ...state, loginStatus: 'failed' };\r\n    }\r\n    case SESSION_CHECK_STARTED: {\r\n      const { user_id, name } = action.payload.session_data.user;\r\n      const username = user_id;\r\n      console.log(action.payload.session_data);\r\n      // console.log(user_id);\r\n      // console.log(name);\r\n      return {\r\n        ...state,\r\n        // username,\r\n        // name,\r\n        loginStatus: 'success',\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default sagaLoginReducer;\r\n"]},"metadata":{},"sourceType":"module"}