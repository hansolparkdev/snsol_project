{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux'; // Action Types\n\nexport var INCREMENT_COUNTER = 'INCREMENT_COUNTER';\nexport var DECREMENT_COUNTER = 'DECREMENT_COUNTER';\nexport var SAGA_UP = 'SAGA_UP';\nexport var SAGA_DOWN = 'SAGA_DOWN';\nexport var SAGA_UP_ASYNC = 'SAGA_UP_ASYNC';\nexport var SAGA_DOWN_ASYNC = 'SAGA_DOWN_ASYNC';\nexport var THUNK_UP_COUNTER = 'THUNK_UP_COUNTER';\nexport var THUNK_DOWN_COUNTER = 'THUNK_DOWN_COUNTER'; // Action Creator\n\nexport var increment = function increment() {\n  return {\n    type: INCREMENT_COUNTER\n  };\n};\nexport var decrement = function decrement() {\n  return {\n    type: DECREMENT_COUNTER\n  };\n};\nexport var sagaIncrement = function sagaIncrement() {\n  return {\n    type: SAGA_UP,\n    value: 1\n  };\n};\nexport var sagaDecrement = function sagaDecrement() {\n  return {\n    type: SAGA_DOWN,\n    value: 1\n  };\n};\nexport var thunkIncrement = function thunkIncrement() {\n  return {\n    type: THUNK_UP_COUNTER,\n    value: 1\n  };\n};\nexport var thunkDecrement = function thunkDecrement() {\n  return {\n    type: THUNK_DOWN_COUNTER,\n    value: 1\n  };\n}; // export const incrementAsync = () => (dispatch) => { // dispatch 를 파라미터로 가지는 함수를 리턴합니다.\n//   \n// };\n\nexport var thunkIncrementAsync = function thunkIncrementAsync() {\n  return function (dispatch) {\n    setTimeout(function () {\n      // 1 초뒤 dispatch 합니다\n      dispatch(thunkIncrement());\n    }, 1000);\n  };\n};\nexport var thunkDecrementAsync = function thunkDecrementAsync() {\n  return function (dispatch) {\n    setTimeout(function () {\n      // 1 초뒤 dispatch 합니다\n      dispatch(thunkDecrement());\n    }, 1000);\n  };\n};\nexport var initialState = {\n  value: 1,\n  sagaValue: 1,\n  thunkValue: 1\n};\n\nvar counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return _objectSpread({}, state, {\n        value: state.value + 1\n      });\n\n    case DECREMENT_COUNTER:\n      return _objectSpread({}, state, {\n        value: state.value - 1\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nvar sagaCounterReducer = function sagaCounterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var newState = _objectSpread({}, state);\n\n  switch (action.type) {\n    case SAGA_UP_ASYNC:\n      newState.sagaValue += action.value;\n      break;\n\n    case SAGA_DOWN_ASYNC:\n      newState.sagaValue -= action.value;\n      break;\n\n    default:\n      return newState;\n  }\n\n  return newState;\n};\n\nvar thunkCounterReducer = function thunkCounterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case THUNK_UP_COUNTER:\n      return _objectSpread({}, state, {\n        thunkValue: state.value + 1\n      });\n\n    case THUNK_DOWN_COUNTER:\n      return _objectSpread({}, state, {\n        thunkValue: state.value - 1\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nvar rootReducer = combineReducers({\n  counter: counterReducer,\n  sagaCounter: sagaCounterReducer,\n  thunkCounter: thunkCounterReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/reducers/rootReducer.js"],"names":["combineReducers","INCREMENT_COUNTER","DECREMENT_COUNTER","SAGA_UP","SAGA_DOWN","SAGA_UP_ASYNC","SAGA_DOWN_ASYNC","THUNK_UP_COUNTER","THUNK_DOWN_COUNTER","increment","type","decrement","sagaIncrement","value","sagaDecrement","thunkIncrement","thunkDecrement","thunkIncrementAsync","dispatch","setTimeout","thunkDecrementAsync","initialState","sagaValue","thunkValue","counterReducer","state","action","sagaCounterReducer","newState","thunkCounterReducer","rootReducer","counter","sagaCounter","thunkCounter"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\n// Action Types\r\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\r\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\r\n\r\nexport const SAGA_UP = 'SAGA_UP';\r\nexport const SAGA_DOWN = 'SAGA_DOWN';\r\nexport const SAGA_UP_ASYNC = 'SAGA_UP_ASYNC';\r\nexport const SAGA_DOWN_ASYNC = 'SAGA_DOWN_ASYNC';\r\n\r\nexport const THUNK_UP_COUNTER = 'THUNK_UP_COUNTER';\r\nexport const THUNK_DOWN_COUNTER = 'THUNK_DOWN_COUNTER';\r\n\r\n// Action Creator\r\nexport const increment = () => ({\r\n  type: INCREMENT_COUNTER,\r\n});\r\n\r\nexport const decrement = () => ({\r\n  type: DECREMENT_COUNTER,\r\n});\r\n\r\nexport const sagaIncrement = () => ({\r\n  type: SAGA_UP,\r\n  value: 1,\r\n});\r\n\r\nexport const sagaDecrement = () => ({\r\n  type: SAGA_DOWN,\r\n  value: 1,\r\n});\r\n\r\nexport const thunkIncrement = () => ({\r\n  type: THUNK_UP_COUNTER,\r\n  value: 1,\r\n});\r\n\r\nexport const thunkDecrement = () => ({\r\n  type: THUNK_DOWN_COUNTER,\r\n  value: 1,\r\n});\r\n\r\n\r\n// export const incrementAsync = () => (dispatch) => { // dispatch 를 파라미터로 가지는 함수를 리턴합니다.\r\n//   \r\n// };\r\nexport const thunkIncrementAsync = () => (dispatch) => {\r\n  setTimeout(() => {\r\n    // 1 초뒤 dispatch 합니다\r\n    dispatch(thunkIncrement());\r\n  }, 1000);\r\n};\r\n\r\nexport const thunkDecrementAsync = () => (dispatch) => {\r\n  setTimeout(() => {\r\n    // 1 초뒤 dispatch 합니다\r\n    dispatch(thunkDecrement());\r\n  }, 1000);\r\n};\r\n\r\nexport const initialState = {\r\n  value: 1,\r\n  sagaValue: 1,\r\n  thunkValue: 1,\r\n};\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT_COUNTER:\r\n      return { ...state, value: state.value + 1 };\r\n    case DECREMENT_COUNTER:\r\n      return { ...state, value: state.value - 1 };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nconst sagaCounterReducer = (state = initialState, action) => {\r\n  const newState = { ...state };\r\n  switch (action.type) {\r\n    case SAGA_UP_ASYNC:\r\n      newState.sagaValue += action.value;\r\n      break;\r\n    case SAGA_DOWN_ASYNC:\r\n      newState.sagaValue -= action.value;\r\n      break;\r\n    default:\r\n      return newState;\r\n  }\r\n  return newState;\r\n};\r\n\r\nconst thunkCounterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case THUNK_UP_COUNTER:\r\n      return { ...state, thunkValue: state.value + 1 };\r\n    case THUNK_DOWN_COUNTER:\r\n      return { ...state, thunkValue: state.value - 1 };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  counter: counterReducer,\r\n  sagaCounter: sagaCounterReducer,\r\n  thunkCounter: thunkCounterReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}