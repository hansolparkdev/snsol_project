{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable camelcase */\nexport const FETCH_CARDS_START_STARTED = 'FETCH_CARDS_START_STARTED';\nexport const FETCH_CARDS_SUCCESS_STARTED = 'FETCH_CARDS_SUCCESS_STARTED';\nexport const FETCH_CARDS_FAIL_STARTED = 'FETCH_CARDS_FAIL_STARTED';\nexport const LIKE_CARD_REQUEST_STARTED = 'LIKE_CARD_REQUEST_STARTED';\nexport const LIKE_CARD_SUCCESS = 'LIKE_CARD_SUCCESS';\nexport const LIKE_CARDS_FAIL = 'LIKE_CARDS_FAIL';\nexport const UNLIKE_CARD_REQUEST_STARTED = 'UNLIKE_CARD_REQUEST_STARTED';\nexport const UNLIKE_CARD_SUCCESS = 'UNLIKE_CARD_SUCCESS';\nexport const UNLIKE_CARDS_FAIL = 'UNLIKE_CARDS_FAIL';\nexport const ADD_CARD_REPLY_REQUEST_STARTED = 'ADD_CARD_REPLY_REQUEST_STARTED';\nexport const ADD_CARD_REPLY_SUCCESS = 'ADD_CARD_REPLY_SUCCESS';\nexport const ADD_CARD_REPLY_FAIL = 'ADD_CARD_REPLY_FAIL';\nexport const DEL_CARD_REPLY_REQUEST_STARTED = 'DEL_CARD_REPLY_REQUEST_STARTED';\nexport const DEL_CARD_REPLY_SUCCESS = 'DEL_CARD_REPLY_SUCCESS';\nexport const DEL_CARD_REPLY_FAIL = 'DEL_CARD_REPLY_FAIL'; // 디스패치될 액션 값\n\nexport const FETCH_CARDS_START = 'FETCH_CARDS_START';\nexport const LIKE_CARD_REQUEST = 'LIKE_CARD_REQUEST';\nexport const UNLIKE_CARD_REQUEST = 'UNLIKE_CARD_REQUEST';\nexport const ADD_CARD_REPLY_REQUEST = 'ADD_CARD_REPLY_REQUEST';\nexport const DEL_CARD_REPLY_REQUEST = 'DEL_CARD_REPLY_REQUEST';\nexport const initialState = {\n  fetchState: '',\n  card: []\n};\n\nconst cardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_CARDS_START_STARTED:\n      {\n        return _objectSpread({}, state, {\n          fetchState: 'card_fetching'\n        });\n      }\n\n    case FETCH_CARDS_SUCCESS_STARTED:\n      {\n        // console.log(action.payload);\n        return _objectSpread({}, state, {\n          card: action.payload,\n          fetchState: 'card_fetching_success'\n        });\n      }\n\n    case FETCH_CARDS_FAIL_STARTED:\n      {\n        return _objectSpread({}, state, {\n          fetchState: 'card_fetching_fail'\n        });\n      }\n\n    case LIKE_CARD_SUCCESS:\n      {\n        // console.log(action.payload);\n        const {\n          id,\n          board_id,\n          user_id,\n          createdAt,\n          updatedAt\n        } = action.payload;\n        const cardIndex = state.card.findIndex(v => v.board_id === board_id);\n        const card = [...state.card];\n        card[cardIndex].likes = card[cardIndex].likes.concat(action.payload);\n        return _objectSpread({}, state, {\n          card\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default cardReducer;","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/reducers/cardReducer.js"],"names":["FETCH_CARDS_START_STARTED","FETCH_CARDS_SUCCESS_STARTED","FETCH_CARDS_FAIL_STARTED","LIKE_CARD_REQUEST_STARTED","LIKE_CARD_SUCCESS","LIKE_CARDS_FAIL","UNLIKE_CARD_REQUEST_STARTED","UNLIKE_CARD_SUCCESS","UNLIKE_CARDS_FAIL","ADD_CARD_REPLY_REQUEST_STARTED","ADD_CARD_REPLY_SUCCESS","ADD_CARD_REPLY_FAIL","DEL_CARD_REPLY_REQUEST_STARTED","DEL_CARD_REPLY_SUCCESS","DEL_CARD_REPLY_FAIL","FETCH_CARDS_START","LIKE_CARD_REQUEST","UNLIKE_CARD_REQUEST","ADD_CARD_REPLY_REQUEST","DEL_CARD_REPLY_REQUEST","initialState","fetchState","card","cardReducer","state","action","type","payload","id","board_id","user_id","createdAt","updatedAt","cardIndex","findIndex","v","likes","concat"],"mappings":";;;;;;AAAA;AACA,OAAO,MAAMA,yBAAyB,GAAG,2BAAlC;AACP,OAAO,MAAMC,2BAA2B,GAAG,6BAApC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,2BAA2B,GAAG,6BAApC;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,8BAA8B,GAAG,gCAAvC;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,8BAA8B,GAAG,gCAAvC;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B,C,CAEP;;AACA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,EADc;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB;;AAKP,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK1B,yBAAL;AAAgC;AAC9B,iCAAYwB,KAAZ;AAAmBH,UAAAA,UAAU,EAAE;AAA/B;AACD;;AACD,SAAKpB,2BAAL;AAAkC;AAChC;AACA,iCAAYuB,KAAZ;AAAmBF,UAAAA,IAAI,EAAEG,MAAM,CAACE,OAAhC;AAAyCN,UAAAA,UAAU,EAAE;AAArD;AACD;;AACD,SAAKnB,wBAAL;AAA+B;AAC7B,iCAAYsB,KAAZ;AAAmBH,UAAAA,UAAU,EAAE;AAA/B;AACD;;AACD,SAAKjB,iBAAL;AAAwB;AACtB;AACA,cAAM;AACJwB,UAAAA,EADI;AACAC,UAAAA,QADA;AACUC,UAAAA,OADV;AAEJC,UAAAA,SAFI;AAEOC,UAAAA;AAFP,YAGFP,MAAM,CAACE,OAHX;AAIA,cAAMM,SAAS,GAAGT,KAAK,CAACF,IAAN,CAAWY,SAAX,CAAsBC,CAAD,IAAOA,CAAC,CAACN,QAAF,KAAeA,QAA3C,CAAlB;AACA,cAAMP,IAAI,GAAG,CAAC,GAAGE,KAAK,CAACF,IAAV,CAAb;AACAA,QAAAA,IAAI,CAACW,SAAD,CAAJ,CAAgBG,KAAhB,GAAwBd,IAAI,CAACW,SAAD,CAAJ,CAAgBG,KAAhB,CAAsBC,MAAtB,CAA6BZ,MAAM,CAACE,OAApC,CAAxB;AACA,iCAAYH,KAAZ;AAAmBF,UAAAA;AAAnB;AACD;;AACD;AAAS;AACP,eAAOE,KAAP;AACD;AAxBH;AA0BD,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["/* eslint-disable camelcase */\r\nexport const FETCH_CARDS_START_STARTED = 'FETCH_CARDS_START_STARTED';\r\nexport const FETCH_CARDS_SUCCESS_STARTED = 'FETCH_CARDS_SUCCESS_STARTED';\r\nexport const FETCH_CARDS_FAIL_STARTED = 'FETCH_CARDS_FAIL_STARTED';\r\n\r\nexport const LIKE_CARD_REQUEST_STARTED = 'LIKE_CARD_REQUEST_STARTED';\r\nexport const LIKE_CARD_SUCCESS = 'LIKE_CARD_SUCCESS';\r\nexport const LIKE_CARDS_FAIL = 'LIKE_CARDS_FAIL';\r\n\r\nexport const UNLIKE_CARD_REQUEST_STARTED = 'UNLIKE_CARD_REQUEST_STARTED';\r\nexport const UNLIKE_CARD_SUCCESS = 'UNLIKE_CARD_SUCCESS';\r\nexport const UNLIKE_CARDS_FAIL = 'UNLIKE_CARDS_FAIL';\r\n\r\nexport const ADD_CARD_REPLY_REQUEST_STARTED = 'ADD_CARD_REPLY_REQUEST_STARTED';\r\nexport const ADD_CARD_REPLY_SUCCESS = 'ADD_CARD_REPLY_SUCCESS';\r\nexport const ADD_CARD_REPLY_FAIL = 'ADD_CARD_REPLY_FAIL';\r\n\r\nexport const DEL_CARD_REPLY_REQUEST_STARTED = 'DEL_CARD_REPLY_REQUEST_STARTED';\r\nexport const DEL_CARD_REPLY_SUCCESS = 'DEL_CARD_REPLY_SUCCESS';\r\nexport const DEL_CARD_REPLY_FAIL = 'DEL_CARD_REPLY_FAIL';\r\n\r\n// 디스패치될 액션 값\r\nexport const FETCH_CARDS_START = 'FETCH_CARDS_START';\r\nexport const LIKE_CARD_REQUEST = 'LIKE_CARD_REQUEST';\r\nexport const UNLIKE_CARD_REQUEST = 'UNLIKE_CARD_REQUEST';\r\nexport const ADD_CARD_REPLY_REQUEST = 'ADD_CARD_REPLY_REQUEST';\r\nexport const DEL_CARD_REPLY_REQUEST = 'DEL_CARD_REPLY_REQUEST';\r\n\r\nexport const initialState = {\r\n  fetchState: '',\r\n  card: [],\r\n};\r\n\r\nconst cardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CARDS_START_STARTED: {\r\n      return { ...state, fetchState: 'card_fetching' };\r\n    }\r\n    case FETCH_CARDS_SUCCESS_STARTED: {\r\n      // console.log(action.payload);\r\n      return { ...state, card: action.payload, fetchState: 'card_fetching_success' };\r\n    }\r\n    case FETCH_CARDS_FAIL_STARTED: {\r\n      return { ...state, fetchState: 'card_fetching_fail' };\r\n    }\r\n    case LIKE_CARD_SUCCESS: {\r\n      // console.log(action.payload);\r\n      const {\r\n        id, board_id, user_id,\r\n        createdAt, updatedAt,\r\n      } = action.payload;\r\n      const cardIndex = state.card.findIndex((v) => v.board_id === board_id);\r\n      const card = [...state.card];\r\n      card[cardIndex].likes = card[cardIndex].likes.concat(action.payload);\r\n      return { ...state, card };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default cardReducer;\r\n"]},"metadata":{},"sourceType":"module"}