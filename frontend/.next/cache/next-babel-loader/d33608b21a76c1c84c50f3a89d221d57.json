{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable max-len */\n\n/* eslint-disable camelcase */\nexport const FETCH_CARDS_START_STARTED = 'FETCH_CARDS_START_STARTED';\nexport const FETCH_CARDS_SUCCESS_STARTED = 'FETCH_CARDS_SUCCESS_STARTED';\nexport const FETCH_CARDS_FAIL_STARTED = 'FETCH_CARDS_FAIL_STARTED';\nexport const LIKE_CARD_SUCCESS = 'LIKE_CARD_SUCCESS';\nexport const LIKE_CARDS_FAIL = 'LIKE_CARDS_FAIL';\nexport const UNLIKE_CARD_SUCCESS = 'UNLIKE_CARD_SUCCESS';\nexport const UNLIKE_CARDS_FAIL = 'UNLIKE_CARDS_FAIL';\nexport const ADD_CARD_REPLY_SUCCESS = 'ADD_CARD_REPLY_SUCCESS';\nexport const ADD_CARD_REPLY_FAIL = 'ADD_CARD_REPLY_FAIL';\nexport const DEL_CARD_REPLY_SUCCESS = 'DEL_CARD_REPLY_SUCCESS';\nexport const DEL_CARD_REPLY_FAIL = 'DEL_CARD_REPLY_FAIL'; // 사가에서 가로챌 액션 값\n\nexport const FETCH_CARDS_START = 'FETCH_CARDS_START';\nexport const LIKE_CARD_REQUEST = 'LIKE_CARD_REQUEST';\nexport const UNLIKE_CARD_REQUEST = 'UNLIKE_CARD_REQUEST';\nexport const ADD_CARD_REPLY_REQUEST = 'ADD_CARD_REPLY_REQUEST';\nexport const DEL_CARD_REPLY_REQUEST = 'DEL_CARD_REPLY_REQUEST';\nexport const initialState = {\n  fetchState: '',\n  card: []\n};\n\nconst cardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_CARDS_START_STARTED:\n      {\n        return _objectSpread({}, state, {\n          fetchState: 'card_fetching'\n        });\n      }\n\n    case FETCH_CARDS_SUCCESS_STARTED:\n      {\n        // console.log(action.payload);\n        return _objectSpread({}, state, {\n          card: action.payload,\n          fetchState: 'card_fetching_success'\n        });\n      }\n\n    case FETCH_CARDS_FAIL_STARTED:\n      {\n        return _objectSpread({}, state, {\n          fetchState: 'card_fetching_fail'\n        });\n      }\n\n    case LIKE_CARD_SUCCESS:\n      {\n        const card = [...state.card];\n        const cardIndex = card.findIndex(v => v.board_id === action.payload.board_id);\n        card[cardIndex].likes = card[cardIndex].likes.concat(action.payload);\n        return _objectSpread({}, state, {\n          card\n        });\n      }\n\n    case UNLIKE_CARD_SUCCESS:\n      {\n        const card = [...state.card];\n        const cardIndex = card.findIndex(v => v.board_id === action.payload.boardId);\n        const likeIndex = card[cardIndex].likes.findIndex(v => v.user_id === action.payload.userId);\n        card[cardIndex].likes.splice(likeIndex, 1);\n        return _objectSpread({}, state, {\n          card\n        });\n      }\n\n    case ADD_CARD_REPLY_SUCCESS:\n      {\n        const card = [...state.card];\n        const cardIndex = card.findIndex(v => v.board_id === action.payload.boardId);\n        card[cardIndex].replies = card[cardIndex].replies.concat(action.payload);\n        return _objectSpread({}, state, {\n          card\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default cardReducer;","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/reducers/cardReducer.js"],"names":["FETCH_CARDS_START_STARTED","FETCH_CARDS_SUCCESS_STARTED","FETCH_CARDS_FAIL_STARTED","LIKE_CARD_SUCCESS","LIKE_CARDS_FAIL","UNLIKE_CARD_SUCCESS","UNLIKE_CARDS_FAIL","ADD_CARD_REPLY_SUCCESS","ADD_CARD_REPLY_FAIL","DEL_CARD_REPLY_SUCCESS","DEL_CARD_REPLY_FAIL","FETCH_CARDS_START","LIKE_CARD_REQUEST","UNLIKE_CARD_REQUEST","ADD_CARD_REPLY_REQUEST","DEL_CARD_REPLY_REQUEST","initialState","fetchState","card","cardReducer","state","action","type","payload","cardIndex","findIndex","v","board_id","likes","concat","boardId","likeIndex","user_id","userId","splice","replies"],"mappings":"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","sourcesContent":["/* eslint-disable max-len */\r\n/* eslint-disable camelcase */\r\nexport const FETCH_CARDS_START_STARTED = 'FETCH_CARDS_START_STARTED';\r\nexport const FETCH_CARDS_SUCCESS_STARTED = 'FETCH_CARDS_SUCCESS_STARTED';\r\nexport const FETCH_CARDS_FAIL_STARTED = 'FETCH_CARDS_FAIL_STARTED';\r\n\r\nexport const LIKE_CARD_SUCCESS = 'LIKE_CARD_SUCCESS';\r\nexport const LIKE_CARDS_FAIL = 'LIKE_CARDS_FAIL';\r\n\r\nexport const UNLIKE_CARD_SUCCESS = 'UNLIKE_CARD_SUCCESS';\r\nexport const UNLIKE_CARDS_FAIL = 'UNLIKE_CARDS_FAIL';\r\n\r\nexport const ADD_CARD_REPLY_SUCCESS = 'ADD_CARD_REPLY_SUCCESS';\r\nexport const ADD_CARD_REPLY_FAIL = 'ADD_CARD_REPLY_FAIL';\r\n\r\nexport const DEL_CARD_REPLY_SUCCESS = 'DEL_CARD_REPLY_SUCCESS';\r\nexport const DEL_CARD_REPLY_FAIL = 'DEL_CARD_REPLY_FAIL';\r\n\r\n// 사가에서 가로챌 액션 값\r\nexport const FETCH_CARDS_START = 'FETCH_CARDS_START';\r\nexport const LIKE_CARD_REQUEST = 'LIKE_CARD_REQUEST';\r\nexport const UNLIKE_CARD_REQUEST = 'UNLIKE_CARD_REQUEST';\r\nexport const ADD_CARD_REPLY_REQUEST = 'ADD_CARD_REPLY_REQUEST';\r\nexport const DEL_CARD_REPLY_REQUEST = 'DEL_CARD_REPLY_REQUEST';\r\n\r\nexport const initialState = {\r\n  fetchState: '',\r\n  card: [],\r\n};\r\n\r\nconst cardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CARDS_START_STARTED: {\r\n      return { ...state, fetchState: 'card_fetching' };\r\n    }\r\n    case FETCH_CARDS_SUCCESS_STARTED: {\r\n      // console.log(action.payload);\r\n      return { ...state, card: action.payload, fetchState: 'card_fetching_success' };\r\n    }\r\n    case FETCH_CARDS_FAIL_STARTED: {\r\n      return { ...state, fetchState: 'card_fetching_fail' };\r\n    }\r\n    case LIKE_CARD_SUCCESS: {\r\n      const card = [...state.card];\r\n      const cardIndex = card.findIndex((v) => v.board_id === action.payload.board_id);\r\n      card[cardIndex].likes = card[cardIndex].likes.concat(action.payload);\r\n      return { ...state, card };\r\n    }\r\n    case UNLIKE_CARD_SUCCESS: {\r\n      const card = [...state.card];\r\n      const cardIndex = card.findIndex((v) => v.board_id === action.payload.boardId);\r\n      const likeIndex = card[cardIndex].likes.findIndex((v) => v.user_id === action.payload.userId);\r\n      card[cardIndex].likes.splice(likeIndex, 1);\r\n      return { ...state, card };\r\n    }\r\n    case ADD_CARD_REPLY_SUCCESS: {\r\n      const card = [...state.card];\r\n      const cardIndex = card.findIndex((v) => v.board_id === action.payload.boardId);\r\n      card[cardIndex].replies = card[cardIndex].replies.concat(action.payload);\r\n      return { ...state, card };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default cardReducer;\r\n"]},"metadata":{},"sourceType":"module"}