{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable camelcase */\nexport const FETCH_CARDS_START_STARTED = 'FETCH_CARDS_START_STARTED';\nexport const FETCH_CARDS_SUCCESS_STARTED = 'FETCH_CARDS_SUCCESS_STARTED';\nexport const FETCH_CARDS_FAIL_STARTED = 'FETCH_CARDS_FAIL_STARTED';\nexport const FETCH_CARDS_START = 'FETCH_CARDS_START';\nexport const initialState = {\n  fetchState: '',\n  card: []\n};\n\nconst cardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_CARDS_START_STARTED:\n      {\n        return _objectSpread({}, state, {\n          fetchState: 'card_fetching'\n        });\n      }\n\n    case FETCH_CARDS_SUCCESS_STARTED:\n      {\n        return _objectSpread({}, state, {\n          fetchState: 'card_fetching_success'\n        });\n      }\n\n    case FETCH_CARDS_FAIL_STARTED:\n      {\n        return _objectSpread({}, state, {\n          fetchState: 'card_fetching_fail'\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default cardReducer;","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/reducers/cardReducer.js"],"names":["FETCH_CARDS_START_STARTED","FETCH_CARDS_SUCCESS_STARTED","FETCH_CARDS_FAIL_STARTED","FETCH_CARDS_START","initialState","fetchState","card","cardReducer","state","action","type"],"mappings":";;;;;;AAAA;AACA,OAAO,MAAMA,yBAAyB,GAAG,2BAAlC;AACP,OAAO,MAAMC,2BAA2B,GAAG,6BAApC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,EADc;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB;;AAKP,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,yBAAL;AAAgC;AAC9B,iCAAYQ,KAAZ;AAAmBH,UAAAA,UAAU,EAAE;AAA/B;AACD;;AACD,SAAKJ,2BAAL;AAAkC;AAChC,iCAAYO,KAAZ;AAAmBH,UAAAA,UAAU,EAAE;AAA/B;AACD;;AACD,SAAKH,wBAAL;AAA+B;AAC7B,iCAAYM,KAAZ;AAAmBH,UAAAA,UAAU,EAAE;AAA/B;AACD;;AACD;AAAS;AACP,eAAOG,KAAP;AACD;AAZH;AAcD,CAfD;;AAiBA,eAAeD,WAAf","sourcesContent":["/* eslint-disable camelcase */\r\nexport const FETCH_CARDS_START_STARTED = 'FETCH_CARDS_START_STARTED';\r\nexport const FETCH_CARDS_SUCCESS_STARTED = 'FETCH_CARDS_SUCCESS_STARTED';\r\nexport const FETCH_CARDS_FAIL_STARTED = 'FETCH_CARDS_FAIL_STARTED';\r\n\r\nexport const FETCH_CARDS_START = 'FETCH_CARDS_START';\r\n\r\nexport const initialState = {\r\n  fetchState: '',\r\n  card: [],\r\n};\r\n\r\nconst cardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CARDS_START_STARTED: {\r\n      return { ...state, fetchState: 'card_fetching' };\r\n    }\r\n    case FETCH_CARDS_SUCCESS_STARTED: {\r\n      return { ...state, fetchState: 'card_fetching_success' };\r\n    }\r\n    case FETCH_CARDS_FAIL_STARTED: {\r\n      return { ...state, fetchState: 'card_fetching_fail' };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default cardReducer;\r\n"]},"metadata":{},"sourceType":"module"}