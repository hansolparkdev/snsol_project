{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const SET_USERNAME_STARTED = 'SET_USERNAME_STARTED';\nexport const SET_PASSWORD_STARTED = 'SET_PASSWORD_STARTED';\nexport const DO_LOGIN_STARTED = 'DO_LOGIN_STARTED';\nexport const DO_LOGIN_SUCCESS = 'DO_LOGIN_SUCCESS';\nexport const DO_LOGIN_FAIL = 'DO_LOGIN_FAIL'; // SAGA Action\n\nexport const SET_USERNAME = 'SET_USERNAME';\nexport const SET_PASSWORD = 'SET_PASSWORD';\nexport const DO_LOGIN = 'DO_LOGIN';\nexport const initialState = {\n  username: '',\n  password: '',\n  loginStatus: undefined,\n  loginErrorMsg: ''\n};\n\nconst sagaLoginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USERNAME_STARTED:\n      {\n        return _objectSpread({}, state, {\n          username: action.payload\n        });\n      }\n\n    case SET_PASSWORD_STARTED:\n      {\n        return _objectSpread({}, state, {\n          password: action.payload\n        });\n      }\n\n    case DO_LOGIN_STARTED:\n      {\n        return _objectSpread({}, state, {\n          loginStatus: 'ongoing'\n        });\n      }\n\n    case DO_LOGIN_SUCCESS:\n      {\n        console.log('success');\n        return _objectSpread({}, state, {\n          loginStatus: 'success',\n          user: action.payload\n        });\n      }\n\n    case DO_LOGIN_FAIL:\n      {\n        return _objectSpread({}, state, {\n          loginStatus: 'failed'\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default sagaLoginReducer;","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/redux/reducers/sagaLoginReducer.js"],"names":["SET_USERNAME_STARTED","SET_PASSWORD_STARTED","DO_LOGIN_STARTED","DO_LOGIN_SUCCESS","DO_LOGIN_FAIL","SET_USERNAME","SET_PASSWORD","DO_LOGIN","initialState","username","password","loginStatus","undefined","loginErrorMsg","sagaLoginReducer","state","action","type","payload","console","log","user"],"mappings":";;;;;;AAAA,OAAO,MAAMA,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB,C,CAEP;;AACA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AAEP,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,EADgB;AAE1BC,EAAAA,QAAQ,EAAE,EAFgB;AAG1BC,EAAAA,WAAW,EAAEC,SAHa;AAI1BC,EAAAA,aAAa,EAAE;AAJW,CAArB;;AAOP,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,oBAAL;AAA2B;AACzB,iCAAYe,KAAZ;AAAmBN,UAAAA,QAAQ,EAAEO,MAAM,CAACE;AAApC;AACD;;AACD,SAAKjB,oBAAL;AAA2B;AACzB,iCAAYc,KAAZ;AAAmBL,UAAAA,QAAQ,EAAEM,MAAM,CAACE;AAApC;AACD;;AACD,SAAKhB,gBAAL;AAAuB;AACrB,iCAAYa,KAAZ;AAAmBJ,UAAAA,WAAW,EAAE;AAAhC;AACD;;AACD,SAAKR,gBAAL;AAAuB;AACrBgB,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,iCAAYL,KAAZ;AAAmBJ,UAAAA,WAAW,EAAE,SAAhC;AAA2CU,UAAAA,IAAI,EAAEL,MAAM,CAACE;AAAxD;AACD;;AACD,SAAKd,aAAL;AAAoB;AAElB,iCAAYW,KAAZ;AAAmBJ,UAAAA,WAAW,EAAE;AAAhC;AACD;;AACD;AAAS;AACP,eAAOI,KAAP;AACD;AApBH;AAsBD,CAvBD;;AAyBA,eAAeD,gBAAf","sourcesContent":["export const SET_USERNAME_STARTED = 'SET_USERNAME_STARTED';\r\nexport const SET_PASSWORD_STARTED = 'SET_PASSWORD_STARTED';\r\nexport const DO_LOGIN_STARTED = 'DO_LOGIN_STARTED';\r\nexport const DO_LOGIN_SUCCESS = 'DO_LOGIN_SUCCESS';\r\nexport const DO_LOGIN_FAIL = 'DO_LOGIN_FAIL';\r\n\r\n// SAGA Action\r\nexport const SET_USERNAME = 'SET_USERNAME';\r\nexport const SET_PASSWORD = 'SET_PASSWORD';\r\nexport const DO_LOGIN = 'DO_LOGIN';\r\n\r\nexport const initialState = {\r\n  username: '',\r\n  password: '',\r\n  loginStatus: undefined,\r\n  loginErrorMsg: '',\r\n};\r\n\r\nconst sagaLoginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USERNAME_STARTED: {\r\n      return { ...state, username: action.payload };\r\n    }\r\n    case SET_PASSWORD_STARTED: {\r\n      return { ...state, password: action.payload };\r\n    }\r\n    case DO_LOGIN_STARTED: {\r\n      return { ...state, loginStatus: 'ongoing' };\r\n    }\r\n    case DO_LOGIN_SUCCESS: {\r\n      console.log('success')\r\n      return { ...state, loginStatus: 'success', user: action.payload };\r\n    }\r\n    case DO_LOGIN_FAIL: {\r\n\r\n      return { ...state, loginStatus: 'failed' };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default sagaLoginReducer;\r\n"]},"metadata":{},"sourceType":"module"}