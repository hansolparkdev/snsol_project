{"ast":null,"code":"var __jsx = React.createElement;\n\n/* eslint-disable no-shadow */\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { Fragment } from 'react'; // import App from 'next/app';\n\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport Head from 'next/head';\nimport moment from 'moment';\nimport Layout from '../components/Layout';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // import store from '../redux/store';\n\nmoment.locale('ko'); // class RootApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n//     // Anything returned here can be access by the client\n//     return { pageProps };\n//   }\n//   render() {\n//     const { Component, pageProps, store } = this.props;\n//     return (\n//       <Fragment>\n//         <Head>\n//           <title>Devsol Blog</title>\n//         </Head>\n//         <Provider store={store}>\n//           <Layout>\n//             <Component {...pageProps} />\n//           </Layout>\n//         </Provider>\n//       </Fragment>\n//     );\n//   }\n// }\n\nconst RootApp = props => {\n  const {\n    Component,\n    pageProps,\n    store\n  } = props;\n  return __jsx(Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Devsol Blog\")), __jsx(Layout, null, __jsx(Component, pageProps)));\n};\n\nRootApp.getInitialProps = async context => {\n  // console.log(context.Component.getInitialProps);\n  // console.log(context.ctx);\n  const {\n    Component,\n    ctx\n  } = context;\n  const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n  console.log(pageProps);\n  return {\n    pageProps\n  };\n}; // export default withRedux(() => (store))(RootApp);\n\n\nexport default RootApp;","map":{"version":3,"sources":["D:/Desktop/snsol_project/frontend/pages/_app.jsx"],"names":["React","Fragment","Provider","withRedux","Head","moment","Layout","locale","RootApp","props","Component","pageProps","store","getInitialProps","context","ctx","console","log"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,sCAAP,C,CAEA;;AAEAD,MAAM,CAACE,MAAP,CAAc,IAAd,E,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,MAAkCH,KAAxC;AACA,SACE,MAAC,QAAD,QACE,MAAC,IAAD,QACE,mCADF,CADF,EAIE,MAAC,MAAD,QACE,MAAC,SAAD,EAAeE,SAAf,CADF,CAJF,CADF;AAUD,CAZD;;AAcAH,OAAO,CAACK,eAAR,GAA0B,MAAOC,OAAP,IAAmB;AAC3C;AACA;AACA,QAAM;AAAEJ,IAAAA,SAAF;AAAaK,IAAAA;AAAb,MAAqBD,OAA3B;AACA,QAAMH,SAAS,GAAGD,SAAS,CAACG,eAAV,GAA4B,MAAMH,SAAS,CAACG,eAAV,CAA0BE,GAA1B,CAAlC,GAAmE,EAArF;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAPD,C,CASA;;;AACA,eAAeH,OAAf","sourcesContent":["/* eslint-disable no-shadow */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { Fragment } from 'react';\r\n// import App from 'next/app';\r\nimport { Provider } from 'react-redux';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport Head from 'next/head';\r\nimport moment from 'moment';\r\nimport Layout from '../components/Layout';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import store from '../redux/store';\r\n\r\nmoment.locale('ko');\r\n\r\n// class RootApp extends App {\r\n//   static async getInitialProps({ Component, ctx }) {\r\n//     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n//     // Anything returned here can be access by the client\r\n//     return { pageProps };\r\n//   }\r\n\r\n//   render() {\r\n//     const { Component, pageProps, store } = this.props;\r\n//     return (\r\n//       <Fragment>\r\n//         <Head>\r\n//           <title>Devsol Blog</title>\r\n//         </Head>\r\n//         <Provider store={store}>\r\n//           <Layout>\r\n//             <Component {...pageProps} />\r\n//           </Layout>\r\n//         </Provider>\r\n//       </Fragment>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst RootApp = (props) => {\r\n  const { Component, pageProps, store } = props;\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>Devsol Blog</title>\r\n      </Head>\r\n      <Layout>\r\n        <Component {...pageProps} />\r\n      </Layout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRootApp.getInitialProps = async (context) => {\r\n  // console.log(context.Component.getInitialProps);\r\n  // console.log(context.ctx);\r\n  const { Component, ctx } = context;\r\n  const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n  console.log(pageProps);\r\n  return { pageProps };\r\n};\r\n\r\n// export default withRedux(() => (store))(RootApp);\r\nexport default RootApp;\r\n"]},"metadata":{},"sourceType":"module"}